{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "HMPPS External Movements Api",
    "contact" : {
      "name" : "HMPPS Digital Studio",
      "email" : "feedback@digital.justice.gov.uk"
    },
    "version" : "2025-09-15.74.e597407"
  },
  "servers" : [ {
    "url" : "https://external-movements-api-dev.hmpps.service.justice.gov.uk",
    "description" : "Development"
  }, {
    "url" : "https://external-movements-api-preprod.hmpps.service.justice.gov.uk",
    "description" : "Pre-Production"
  }, {
    "url" : "https://external-movements-api.hmpps.service.justice.gov.uk",
    "description" : "Production"
  }, {
    "url" : "http://localhost:8080",
    "description" : "Local"
  } ],
  "security" : [ {
    "bearer-jwt" : [ "read", "write" ]
  } ],
  "tags" : [ ],
  "paths" : {
    "/sync/temporary-absence-application/{personIdentifier}" : {
      "put" : {
        "tags" : [ "sync-controller" ],
        "description" : "\n\nRequires one of the following roles:\n* ROLE_EXTERNAL_MOVEMENTS__SYNC__RW",
        "operationId" : "syncTap",
        "parameters" : [ {
          "name" : "personIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TapApplicationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncResponse"
                }
              }
            }
          }
        }
      }
    },
    "/temporary-absence-series/{personIdentifier}" : {
      "post" : {
        "tags" : [ "tap-series-controller" ],
        "description" : "\n\nRequires one of the following roles:\n* ROLE_EXTERNAL_MOVEMENTS__EXTERNAL_MOVEMENTS_UI",
        "operationId" : "createTapSeries",
        "parameters" : [ {
          "name" : "personIdentifier",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateTapSeriesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceId"
                }
              }
            }
          }
        }
      }
    },
    "/reference-data/{domain}" : {
      "get" : {
        "tags" : [ "reference-data-controller" ],
        "description" : "\n\nRequires one of the following roles:\n* ROLE_EXTERNAL_MOVEMENTS__EXTERNAL_MOVEMENTS_UI",
        "operationId" : "getDomain",
        "parameters" : [ {
          "name" : "domain",
          "in" : "path",
          "description" : "The reference data domain required. This is case insensitive.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "absence-reason", "absence-reason-category", "absence-sub-type", "absence-type", "accompanied-by", "location-type", "tap-status", "transport" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/absence-categorisation/{domain}" : {
      "get" : {
        "tags" : [ "absence-categorisation-controller" ],
        "description" : "\n\nRequires one of the following roles:\n* ROLE_EXTERNAL_MOVEMENTS__EXTERNAL_MOVEMENTS_UI",
        "operationId" : "getDomain_1",
        "parameters" : [ {
          "name" : "domain",
          "in" : "path",
          "description" : "The reference data domain required. This is case insensitive.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "absence-reason", "absence-reason-category", "absence-sub-type", "absence-type" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AbsenceCategorisations"
                }
              }
            }
          }
        }
      }
    },
    "/absence-categorisation/{domain}/{code}" : {
      "get" : {
        "tags" : [ "absence-categorisation-controller" ],
        "description" : "\n\nRequires one of the following roles:\n* ROLE_EXTERNAL_MOVEMENTS__EXTERNAL_MOVEMENTS_UI",
        "operationId" : "getOptions",
        "parameters" : [ {
          "name" : "domain",
          "in" : "path",
          "description" : "The reference data domain required. This is case insensitive.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "absence-reason", "absence-reason-category", "absence-sub-type", "absence-type" ]
          }
        }, {
          "name" : "code",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AbsenceCategorisations"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "NomisAudit" : {
        "type" : "object",
        "properties" : {
          "createDatetime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createUsername" : {
            "type" : "string"
          },
          "modifyUserId" : {
            "type" : "string"
          },
          "modifyDatetime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "auditTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "auditUserId" : {
            "type" : "string"
          }
        },
        "required" : [ "createDatetime", "createUsername" ]
      },
      "TapApplicationRequest" : {
        "type" : "object",
        "properties" : {
          "movementApplicationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eventSubType" : {
            "type" : "string"
          },
          "applicationDate" : {
            "type" : "string",
            "format" : "date"
          },
          "fromDate" : {
            "type" : "string",
            "format" : "date"
          },
          "releaseTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "toDate" : {
            "type" : "string",
            "format" : "date"
          },
          "returnTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "applicationStatus" : {
            "type" : "string"
          },
          "escortCode" : {
            "type" : "string"
          },
          "transportType" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "prisonId" : {
            "type" : "string"
          },
          "toAgencyId" : {
            "type" : "string"
          },
          "toAddressId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "toAddressOwnerClass" : {
            "type" : "string"
          },
          "contactPersonName" : {
            "type" : "string"
          },
          "applicationType" : {
            "type" : "string"
          },
          "temporaryAbsenceType" : {
            "type" : "string"
          },
          "temporaryAbsenceSubType" : {
            "type" : "string"
          },
          "audit" : {
            "$ref" : "#/components/schemas/NomisAudit"
          }
        },
        "required" : [ "applicationDate", "applicationStatus", "applicationType", "audit", "eventSubType", "fromDate", "movementApplicationId", "releaseTime", "returnTime", "toDate" ]
      },
      "SyncResponse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "id" ]
      },
      "CreateTapSeriesRequest" : {
        "type" : "object",
        "properties" : {
          "submittedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "repeat" : {
            "type" : "boolean"
          },
          "statusCode" : {
            "type" : "string"
          },
          "absenceTypeCode" : {
            "type" : "string"
          },
          "absenceSubTypeCode" : {
            "type" : "string"
          },
          "absenceReasonCode" : {
            "type" : "string"
          },
          "releaseAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "returnBy" : {
            "type" : "string",
            "format" : "date-time"
          },
          "accompanied" : {
            "type" : "boolean"
          },
          "accompaniedByCode" : {
            "type" : "string"
          },
          "transportCode" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          },
          "locationTypeCode" : {
            "type" : "string"
          },
          "locationId" : {
            "type" : "string"
          }
        },
        "required" : [ "absenceTypeCode", "accompanied", "locationTypeCode", "releaseAt", "repeat", "returnBy", "statusCode", "submittedAt" ]
      },
      "ReferenceId" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "required" : [ "id" ]
      },
      "CodedDescription" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "description" ]
      },
      "ReferenceDataResponse" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "$ref" : "#/components/schemas/CodedDescription"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CodedDescription"
            }
          }
        },
        "required" : [ "domain", "items" ]
      },
      "AbsenceCategorisation" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "hintText" : {
            "type" : "string"
          },
          "nextDomain" : {
            "type" : "string",
            "enum" : [ "ABSENCE_TYPE", "ABSENCE_SUB_TYPE", "ABSENCE_REASON_CATEGORY", "ABSENCE_REASON", "ACCOMPANIED_BY", "TRANSPORT", "TAP_STATUS", "LOCATION_TYPE" ]
          }
        },
        "required" : [ "code", "description" ]
      },
      "AbsenceCategorisations" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "$ref" : "#/components/schemas/CodedDescription"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbsenceCategorisation"
            }
          }
        },
        "required" : [ "domain", "items" ]
      }
    },
    "securitySchemes" : {
      "bearer-jwt" : {
        "type" : "http",
        "name" : "Authorization",
        "in" : "header",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}