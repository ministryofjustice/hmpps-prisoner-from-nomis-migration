{
  "openapi": "3.0.1",
  "info": {
    "title": "Incident Reporting API",
    "description": "API for viewing and managing incident reports",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "license": {
      "name": "MIT"
    },
    "version": "2024-12-10.3783.4f3d88b"
  },
  "servers": [
    {
      "url": "/",
      "description": "Current url"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    },
    {
      "hmpps-auth": []
    }
  ],
  "tags": [
    {
      "name": "Constants",
      "description": "Constants and enumerations used in incident reports"
    },
    {
      "name": "Incident events",
      "description": "Retrieve events. These are groups of reports related to one incident"
    },
    {
      "name": "Questions and responses forming an incident report",
      "description": "Create, retrieve and delete question-response pairs that form incident reports"
    },
    {
      "name": "Incident reports",
      "description": "Create, retrieve, update and delete incident reports"
    },
    {
      "name": "Objects related to incident reports",
      "description": "Create, retrieve, update and delete objects that are related to incident reports"
    },
    {
      "name": "Migrate/Upsert NOMIS Incident Report",
      "description": "Migrate or synchronise NOMIS incident report to Incident Report Service"
    }
  ],
  "paths": {
    "/queue-admin/retry-dlq/{dlqName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryDlq",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RetryDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/retry-all-dlqs": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "retryAllDlqs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RetryDlqResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/purge-queue/{queueName}": {
      "put": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "purgeQueue",
        "parameters": [
          {
            "name": "queueName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PurgeQueueResult"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{reportId}/questions": {
      "get": {
        "tags": [
          "Questions and responses forming an incident report"
        ],
        "summary": "Returns all non-historic questions in an incident report with their responses",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getQuestionsAndResponses",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all questions and responses in report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Questions and responses forming an incident report"
        ],
        "summary": "Add new questions with responses to the end of the current list or update them in place if question codes match",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "addOrUpdateQuestionsWithResponses",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "maxItems": 2147483647,
                "minItems": 1,
                "type": "array",
                "description": "List of question and responses to add or update in place",
                "items": {
                  "$ref": "#/components/schemas/AddOrUpdateQuestionWithResponses"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns all questions and responses in report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Questions and responses forming an incident report"
        ],
        "summary": "Deletes the last question from an incident report along with its responses",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "deleteLastQuestionAndResponses",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all questions and responses in report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sync/upsert": {
      "post": {
        "tags": [
          "Migrate/Upsert NOMIS Incident Report"
        ],
        "summary": "Migrate a report",
        "description": "Requires role MIGRATE_INCIDENT_REPORTS and write scope",
        "operationId": "upsertIncidentReport",
        "requestBody": {
          "description": "Incident report created or updated in NOMIS",
          "content": {
            "application/json": {
              "schema": {
                "writeOnly": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NomisSyncRequest"
                  },
                  {
                    "$ref": "#/components/schemas/NomisSyncCreateRequest"
                  },
                  {
                    "$ref": "#/components/schemas/NomisSyncUpdateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Migrated NOMIS incident report id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NomisSyncReportId"
                }
              }
            }
          },
          "200": {
            "description": "Updated NOMIS incident report id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NomisSyncReportId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MIGRATE_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found, when id is provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports": {
      "get": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Returns pages of filtered incident reports (with only basic information)",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getBasicReports",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Filter by given locations, typically prison IDs",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 20,
                "minLength": 2,
                "type": "string",
                "example": "MDI"
              },
              "default": null
            },
            "example": "LEI,MDI"
          },
          {
            "name": "prisonId",
            "in": "query",
            "description": "Filter by given location, typically a prison ID. Ignored if `location` is also used.",
            "required": false,
            "deprecated": true,
            "schema": {
              "maxLength": 6,
              "minLength": 2,
              "type": "string",
              "description": "Filter by given location, typically a prison ID. Ignored if `location` is also used.",
              "nullable": true,
              "example": "MDI",
              "deprecated": true,
              "default": "null"
            },
            "example": "MDI"
          },
          {
            "name": "source",
            "in": "query",
            "description": "Filter by given information source",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DPS",
                "NOMIS"
              ]
            },
            "example": "DPS"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by given statuses",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DRAFT",
                  "AWAITING_ANALYSIS",
                  "IN_ANALYSIS",
                  "INFORMATION_REQUIRED",
                  "INFORMATION_AMENDED",
                  "CLOSED",
                  "POST_INCIDENT_UPDATE",
                  "INCIDENT_UPDATED",
                  "DUPLICATE"
                ]
              },
              "default": null
            },
            "example": "CLOSED,DUPLICATE"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by given incident type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ABSCONDER",
                "ASSAULT",
                "ATTEMPTED_ESCAPE_FROM_CUSTODY",
                "ATTEMPTED_ESCAPE_FROM_ESCORT",
                "BOMB_THREAT",
                "BREACH_OF_SECURITY",
                "DEATH_IN_CUSTODY",
                "DEATH_OTHER",
                "DISORDER",
                "DRONE_SIGHTING",
                "OLD_DRONE_SIGHTING1",
                "ESCAPE_FROM_CUSTODY",
                "ESCAPE_FROM_ESCORT",
                "FINDS",
                "FIRE",
                "FOOD_REFUSAL",
                "FULL_CLOSE_DOWN_SEARCH",
                "KEY_LOCK_INCIDENT",
                "MISCELLANEOUS",
                "RADIO_COMPROMISE",
                "RELEASED_IN_ERROR",
                "SELF_HARM",
                "TEMPORARY_RELEASE_FAILURE",
                "TOOL_LOSS",
                "DAMAGE",
                "OLD_ASSAULT",
                "OLD_ASSAULT1",
                "OLD_ASSAULT2",
                "OLD_ASSAULT3",
                "OLD_BARRICADE",
                "OLD_CONCERTED_INDISCIPLINE",
                "OLD_DISORDER",
                "OLD_DRONE_SIGHTING",
                "OLD_DRUGS",
                "OLD_FINDS",
                "OLD_FINDS1",
                "OLD_FINDS2",
                "OLD_FINDS3",
                "OLD_FINDS4",
                "OLD_FIREARM_ETC",
                "OLD_HOSTAGE",
                "OLD_KEY_LOCK_INCIDENT",
                "OLD_MOBILES",
                "OLD_ROOF_CLIMB",
                "OLD_TEMPORARY_RELEASE_FAILURE",
                "OLD_TEMPORARY_RELEASE_FAILURE1",
                "OLD_TEMPORARY_RELEASE_FAILURE2"
              ]
            },
            "example": "DAMAGE"
          },
          {
            "name": "incidentDateFrom",
            "in": "query",
            "description": "Filter for incidents occurring since this date (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter for incidents occurring since this date (inclusive)",
              "format": "date",
              "nullable": true,
              "example": "2024-01-01"
            },
            "example": "2024-01-01"
          },
          {
            "name": "incidentDateUntil",
            "in": "query",
            "description": "Filter for incidents occurring until this date (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter for incidents occurring until this date (inclusive)",
              "format": "date",
              "nullable": true,
              "example": "2024-05-31"
            },
            "example": "2024-05-31"
          },
          {
            "name": "reportedDateFrom",
            "in": "query",
            "description": "Filter for incidents reported since this date (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter for incidents reported since this date (inclusive)",
              "format": "date",
              "nullable": true,
              "example": "2024-01-01"
            },
            "example": "2024-01-01"
          },
          {
            "name": "reportedDateUntil",
            "in": "query",
            "description": "Filter for incidents reported until this date (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter for incidents reported until this date (inclusive)",
              "format": "date",
              "nullable": true,
              "example": "2024-05-31"
            },
            "example": "2024-05-31"
          },
          {
            "name": "reportedByUsername",
            "in": "query",
            "description": "Filter for incidents reported by username",
            "required": false,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 3,
              "type": "string",
              "description": "Filter for incidents reported by username",
              "nullable": true,
              "example": "abc12a",
              "default": "null"
            },
            "example": "abc12a"
          },
          {
            "name": "involvingStaffUsername",
            "in": "query",
            "description": "Filter for incidents involving staff identified by username",
            "required": false,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 3,
              "type": "string",
              "description": "Filter for incidents involving staff identified by username",
              "nullable": true,
              "example": "abc12a",
              "default": "null"
            },
            "example": "abc12a"
          },
          {
            "name": "involvingPrisonerNumber",
            "in": "query",
            "description": "Filter for incidents involving prisoners identified by prisoner number",
            "required": false,
            "schema": {
              "maxLength": 10,
              "minLength": 7,
              "type": "string",
              "description": "Filter for incidents involving prisoners identified by prisoner number",
              "nullable": true,
              "example": "A1234AA",
              "default": "null"
            },
            "example": "A1234AA"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "incidentDateAndTime,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a page of incident reports",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePageReportBasic"
                }
              }
            }
          },
          "400": {
            "description": "When input parameters are not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Creates a draft incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s creator.",
        "operationId": "createReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns created draft incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithDetails"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{reportId}/staff-involved": {
      "get": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Returns staff involvement for this incident report",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "listObjects",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns staff involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffInvolvement"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Adds an involved member of staff to this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "addObject",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStaffInvolvement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns staff involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffInvolvement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{reportId}/prisoners-involved": {
      "get": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Returns prisoner involvement for this incident report",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "listObjects_1",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns prisoner involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrisonerInvolvement"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Adds an involved prisoner to this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "addObject_1",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPrisonerInvolvement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns prisoner involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrisonerInvolvement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{reportId}/correction-requests": {
      "get": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Returns correction requests for this incident report",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "listObjects_2",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns correction requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CorrectionRequest"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Adds a correction request to this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the correction requester and report modifier.",
        "operationId": "addObject_2",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCorrectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns correction requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CorrectionRequest"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{reportId}/staff-involved/{index}": {
      "delete": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Remove an involved member of staff from this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "removeObject",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          },
          {
            "name": "index",
            "in": "path",
            "description": "The index of the object to delete (starts from 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The index of the object to delete (starts from 1)",
              "format": "int32",
              "example": 1
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns staff involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffInvolvement"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Update an involved member of staff in this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "updateObject",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          },
          {
            "name": "index",
            "in": "path",
            "description": "The index of the object to update (starts from 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The index of the object to update (starts from 1)",
              "format": "int32",
              "example": 1
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStaffInvolvement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns staff involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffInvolvement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{reportId}/prisoners-involved/{index}": {
      "delete": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Remove an involved prisoner from this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "removeObject_1",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          },
          {
            "name": "index",
            "in": "path",
            "description": "The index of the object to delete (starts from 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The index of the object to delete (starts from 1)",
              "format": "int32",
              "example": 1
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns prisoner involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrisonerInvolvement"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Update an involved prisoner in this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "updateObject_1",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          },
          {
            "name": "index",
            "in": "path",
            "description": "The index of the object to update (starts from 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The index of the object to update (starts from 1)",
              "format": "int32",
              "example": 1
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrisonerInvolvement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns prisoner involvement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrisonerInvolvement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{reportId}/correction-requests/{index}": {
      "delete": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Remove a correction request from this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "removeObject_2",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          },
          {
            "name": "index",
            "in": "path",
            "description": "The index of the object to delete (starts from 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The index of the object to delete (starts from 1)",
              "format": "int32",
              "example": 1
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns correction requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CorrectionRequest"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Objects related to incident reports"
        ],
        "summary": "Update a correction request in this incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which overrides current correction requester and report modifier.",
        "operationId": "updateObject_2",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          },
          {
            "name": "index",
            "in": "path",
            "description": "The index of the object to update (starts from 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The index of the object to update (starts from 1)",
              "format": "int32",
              "example": 1
            },
            "example": 1
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCorrectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns correction requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CorrectionRequest"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{id}": {
      "get": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Returns the incident report (with only basic information) for this ID",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getBasicReportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportBasic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Deletes an incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope.",
        "operationId": "deleteReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          },
          {
            "name": "deleteOrphanedEvents",
            "in": "query",
            "description": "Whether orphaned events should also be deleted",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether orphaned events should also be deleted",
              "example": false,
              "default": true
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns deleted incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithDetails"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Updates key properties of an existing incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "updateReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal ID of the report to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The internal ID of the report to update",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns updated incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportBasic"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{id}/type": {
      "patch": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Changes the type of an existing incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "changeReportType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal ID of the report to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The internal ID of the report to update",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns updated incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithDetails"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{id}/status": {
      "patch": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Changes the status of an existing incident report",
        "description": "Requires role MAINTAIN_INCIDENT_REPORTS and write scope. Authentication token must provide a username which is recorded as the report’s modifier.",
        "operationId": "changeReportStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The internal ID of the report to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The internal ID of the report to update",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns updated incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithDetails"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the MAINTAIN_INCIDENT_REPORTS role with write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subject-access-request": {
      "get": {
        "tags": [
          "Subject Access Request"
        ],
        "summary": "Provides content for a prisoner to satisfy the needs of a subject access request on their behalf",
        "description": "Requires role SAR_DATA_ACCESS or additional role as specified by hmpps.sar.additionalAccessRole configuration.",
        "operationId": "getSarContentByReference",
        "parameters": [
          {
            "name": "prn",
            "in": "query",
            "description": "NOMIS Prison Reference Number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "crn",
            "in": "query",
            "description": "nDelius Case Reference Number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Optional parameter denoting minimum date of event occurrence which should be returned in the response",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Optional parameter denoting maximum date of event occurrence which should be returned in the response",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successfully processed - content found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HmppsSubjectAccessRequestContent"
                }
              }
            }
          },
          "204": {
            "description": "Request successfully processed - no content found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "The client does not have authorisation to make this request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "209": {
            "description": "Subject Identifier is not recognised by this service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/queue-admin/get-dlq-messages/{dlqName}": {
      "get": {
        "tags": [
          "hmpps-queue-resource"
        ],
        "operationId": "getDlqMessages",
        "parameters": [
          {
            "name": "dlqName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxMessages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetDlqResult"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/{id}/with-details": {
      "get": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Returns the incident report (with all related details) for this ID",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getReportWithDetailsById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The incident report id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/reference/{reportReference}": {
      "get": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Returns the incident report (with only basic information) for this reference",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getBasicReportByReference",
        "parameters": [
          {
            "name": "reportReference",
            "in": "path",
            "description": "The incident report reference",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report reference",
              "example": "\"2342341242\""
            },
            "example": "2342341242"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportBasic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-reports/reference/{reportReference}/with-details": {
      "get": {
        "tags": [
          "Incident reports"
        ],
        "summary": "Returns the incident report (with all related details) for this reference",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getReportWithDetailsByReference",
        "parameters": [
          {
            "name": "reportReference",
            "in": "path",
            "description": "The incident report reference",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The incident report reference",
              "example": "\"2342341242\""
            },
            "example": "2342341242"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an incident report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-events": {
      "get": {
        "tags": [
          "Incident events"
        ],
        "summary": "Returns pages of events (without contained reports)",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Filter by given locations, typically prison IDs",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "maxLength": 20,
                "minLength": 2,
                "type": "string",
                "example": "MDI"
              },
              "default": null
            },
            "example": "LEI,MDI"
          },
          {
            "name": "eventDateFrom",
            "in": "query",
            "description": "Filter for events that happened since this date (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter for events that happened since this date (inclusive)",
              "format": "date",
              "nullable": true,
              "example": "2024-01-01"
            },
            "example": "2024-01-01"
          },
          {
            "name": "eventDateUntil",
            "in": "query",
            "description": "Filter for events that happened until this date (inclusive)",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter for events that happened until this date (inclusive)",
              "format": "date",
              "nullable": true,
              "example": "2024-05-31"
            },
            "example": "2024-05-31"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "eventDateAndTime,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a page of events",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePageEventWithBasicReports"
                }
              }
            }
          },
          "400": {
            "description": "When input parameters are not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-events/{id}": {
      "get": {
        "tags": [
          "Incident events"
        ],
        "summary": "Returns the event (without contained reports) for this ID",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The event id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The event id",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            },
            "example": "11111111-2222-3333-4444-555555555555"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWithBasicReports"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/incident-events/reference/{eventReference}": {
      "get": {
        "tags": [
          "Incident events"
        ],
        "summary": "Returns the event (without contained reports) for this reference",
        "description": "Requires role VIEW_INCIDENT_REPORTS",
        "operationId": "getEventByReference",
        "parameters": [
          {
            "name": "eventReference",
            "in": "path",
            "description": "The event reference",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The event reference",
              "example": "\"2342341242\""
            },
            "example": "2342341242"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWithBasicReports"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires the VIEW_INCIDENT_REPORTS role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/constants/types": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes and descriptions of incident types",
        "operationId": "types",
        "responses": {
          "200": {
            "description": "Returns codes and descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/constants/statuses": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes and descriptions of incident statuses",
        "operationId": "statuses",
        "responses": {
          "200": {
            "description": "Returns codes and descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatusConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/constants/staff-roles": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes and descriptions of roles of staff involvement in an incident",
        "operationId": "staffRoles",
        "responses": {
          "200": {
            "description": "Returns codes and descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaffRoleConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/constants/prisoner-roles": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes and descriptions of roles of a prisoner’s involvement in an incident",
        "operationId": "prisonerRoles",
        "responses": {
          "200": {
            "description": "Returns codes and descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrisonerRoleConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/constants/prisoner-outcomes": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes and descriptions of outcomes from a prisoner’s involvement in an incident",
        "operationId": "prisonerOutcomes",
        "responses": {
          "200": {
            "description": "Returns codes and descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrisonerOutcomeConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/constants/information-sources": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes and descriptions of information sources for incident reports",
        "operationId": "informationSource",
        "responses": {
          "200": {
            "description": "Returns codes and descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/constants/error-codes": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes used to discriminate between error types",
        "operationId": "errorCodes",
        "responses": {
          "200": {
            "description": "Returns codes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/constants/correction-reasons": {
      "get": {
        "tags": [
          "Constants"
        ],
        "summary": "List codes and descriptions of reasons for correction requests made about a report",
        "operationId": "correctionReasons",
        "responses": {
          "200": {
            "description": "Returns codes and descriptions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConstantDescription"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RetryDlqResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurgeQueueResult": {
        "required": [
          "messagesFoundCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ErrorResponse": {
        "required": [
          "developerMessage",
          "status",
          "userMessage"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "format": "int32",
            "example": 500
          },
          "userMessage": {
            "type": "string",
            "description": "User message for the error",
            "example": "No incident report found for ID `55544222`"
          },
          "developerMessage": {
            "type": "string",
            "description": "More detailed error message",
            "example": "[Details, sometimes a stack trace]"
          },
          "errorCode": {
            "type": "integer",
            "description": "When present, uniquely identifies the type of error making it easier for clients to discriminate without relying on error description or HTTP status code; see ` uk.gov.justice.digital.hmpps.incidentreporting.resource.ErrorCode` enumeration in hmpps-incident-reporting-api",
            "format": "int32",
            "nullable": true,
            "example": 101
          },
          "moreInfo": {
            "type": "string",
            "description": "More information about the error",
            "nullable": true,
            "example": "[Rarely used, error-specific]",
            "default": "null"
          }
        },
        "description": "Error response",
        "readOnly": true
      },
      "AddOrUpdateQuestionResponse": {
        "minLength": 1,
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "response": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "The response text as seen by downstream data consumers"
          },
          "responseDate": {
            "type": "string",
            "description": "Optional response as a date",
            "format": "date",
            "nullable": true,
            "example": "2024-04-29"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Optional additional information",
            "nullable": true,
            "default": "null"
          }
        },
        "description": "A response to a question",
        "writeOnly": true
      },
      "AddOrUpdateQuestionWithResponses": {
        "required": [
          "code",
          "question",
          "responses"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The question code; used as a unique identifier within one report"
          },
          "question": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "The question text as seen by downstream data consumers"
          },
          "responses": {
            "minLength": 1,
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "The responses to this question",
            "items": {
              "$ref": "#/components/schemas/AddOrUpdateQuestionResponse"
            }
          },
          "additionalInformation": {
            "type": "string",
            "description": "Optional additional information",
            "nullable": true,
            "default": "null"
          }
        },
        "description": "Payload to add question with responses to an incident report or, if the question code exists in the report, update the question and overwrite responses",
        "writeOnly": true
      },
      "Question": {
        "required": [
          "code",
          "question",
          "responses",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The question code; used as a unique identifier within one report and typically refers to a specific question for an incident type"
          },
          "question": {
            "type": "string",
            "description": "The question text as seen by downstream data consumers"
          },
          "sequence": {
            "type": "integer",
            "description": "Sequence of the questions",
            "format": "int32",
            "deprecated": true
          },
          "responses": {
            "type": "array",
            "description": "The responses to this question",
            "items": {
              "$ref": "#/components/schemas/Response"
            }
          },
          "additionalInformation": {
            "type": "string",
            "description": "Optional additional information",
            "nullable": true
          }
        },
        "description": "Question with responses making up an incident report",
        "readOnly": true
      },
      "Response": {
        "required": [
          "recordedAt",
          "recordedBy",
          "response",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "The response text as seen by downstream data consumers"
          },
          "sequence": {
            "type": "integer",
            "description": "Sequence of the responses",
            "format": "int32",
            "deprecated": true
          },
          "responseDate": {
            "type": "string",
            "description": "Optional response as a date",
            "format": "date",
            "nullable": true,
            "example": "2024-04-29"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Optional additional information",
            "nullable": true,
            "default": "null"
          },
          "recordedBy": {
            "type": "string",
            "description": "Username of person who responded to the question"
          },
          "recordedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the response was made",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Response to a question making up an incident report",
        "readOnly": true
      },
      "NomisCode": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code"
          },
          "description": {
            "type": "string",
            "description": "Description"
          }
        },
        "description": "The outcome of the incident"
      },
      "NomisHistory": {
        "required": [
          "createDateTime",
          "createdBy",
          "incidentChangeDate",
          "incidentChangeStaff",
          "questionnaireId",
          "questions",
          "type"
        ],
        "type": "object",
        "properties": {
          "questionnaireId": {
            "type": "integer",
            "description": "The history questionnaire id for the incident",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "The questionnaire type"
          },
          "description": {
            "type": "string",
            "description": "The questionnaire description"
          },
          "questions": {
            "type": "array",
            "description": "Questions asked for the questionnaire",
            "items": {
              "$ref": "#/components/schemas/NomisHistoryQuestion"
            }
          },
          "incidentChangeDate": {
            "type": "string",
            "description": "When the questionnaire was changed",
            "format": "date"
          },
          "incidentChangeStaff": {
            "$ref": "#/components/schemas/NomisStaff"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the historical incident questionnaire was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the person who created the historical incident questionnaire"
          }
        },
        "description": "Historical questionnaire details for the incident"
      },
      "NomisHistoryQuestion": {
        "required": [
          "answers",
          "question",
          "questionId",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "questionId": {
            "type": "integer",
            "description": "The sequence number of the response question for this incident",
            "format": "int64"
          },
          "sequence": {
            "type": "integer",
            "description": "The sequence number of the question for this incident",
            "format": "int32"
          },
          "question": {
            "type": "string",
            "description": "The Question being asked"
          },
          "answers": {
            "type": "array",
            "description": "Historical list of Responses to this question",
            "items": {
              "$ref": "#/components/schemas/NomisHistoryResponse"
            }
          }
        },
        "description": "Questions asked for the questionnaire"
      },
      "NomisHistoryResponse": {
        "required": [
          "recordingStaff",
          "responseSequence"
        ],
        "type": "object",
        "properties": {
          "questionResponseId": {
            "type": "integer",
            "description": "The id of the questionnaire question answer",
            "format": "int64"
          },
          "responseSequence": {
            "type": "integer",
            "description": "The sequence number of the response for this incident",
            "format": "int32"
          },
          "answer": {
            "type": "string",
            "description": "The answer text"
          },
          "responseDate": {
            "type": "string",
            "description": "Response date added to the response by recording staff",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "description": "Comment added to the response by recording staff"
          },
          "recordingStaff": {
            "$ref": "#/components/schemas/NomisStaff"
          }
        },
        "description": "Historical list of Responses to this question"
      },
      "NomisOffender": {
        "required": [
          "lastName",
          "offenderNo"
        ],
        "type": "object",
        "properties": {
          "offenderNo": {
            "type": "string",
            "description": "NOMIS id"
          },
          "firstName": {
            "type": "string",
            "description": "First name of staff member"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of staff member"
          }
        },
        "description": "Offender involved in the incident"
      },
      "NomisOffenderParty": {
        "required": [
          "createDateTime",
          "createdBy",
          "offender",
          "role"
        ],
        "type": "object",
        "properties": {
          "offender": {
            "$ref": "#/components/schemas/NomisOffender"
          },
          "sequence": {
            "type": "integer",
            "description": "The sequence number providing an order for a list of offender parties",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/NomisCode"
          },
          "outcome": {
            "$ref": "#/components/schemas/NomisCode"
          },
          "comment": {
            "type": "string",
            "description": "General information about the incident"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the offender party was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the person who created the offender party"
          },
          "lastModifiedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the offender party was last updated",
            "example": "2021-07-05T10:35:17"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the person who last updated the offender party"
          }
        },
        "description": "Offenders involved in the incident"
      },
      "NomisQuestion": {
        "required": [
          "answers",
          "createDateTime",
          "createdBy",
          "question",
          "questionId",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "questionId": {
            "type": "integer",
            "description": "The questionnaire question id",
            "format": "int64"
          },
          "sequence": {
            "type": "integer",
            "description": "The sequence number of the question for this incident",
            "format": "int32"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the question was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the person who created the question"
          },
          "question": {
            "type": "string",
            "description": "The Question being asked"
          },
          "answers": {
            "type": "array",
            "description": "List of Responses to this question",
            "items": {
              "$ref": "#/components/schemas/NomisResponse"
            }
          }
        },
        "description": "Questions asked for the incident"
      },
      "NomisReport": {
        "required": [
          "createDateTime",
          "createdBy",
          "history",
          "incidentDateTime",
          "incidentId",
          "lockedResponse",
          "offenderParties",
          "prison",
          "questionnaireId",
          "questions",
          "reportedDateTime",
          "reportingStaff",
          "requirements",
          "staffParties",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "incidentId": {
            "type": "integer",
            "description": "The Incident id",
            "format": "int64"
          },
          "questionnaireId": {
            "type": "integer",
            "description": "The id of the questionnaire associated with this incident",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "description": "A summary of the incident"
          },
          "description": {
            "type": "string",
            "description": "The incident details"
          },
          "prison": {
            "$ref": "#/components/schemas/NomisCode"
          },
          "status": {
            "$ref": "#/components/schemas/NomisStatus"
          },
          "type": {
            "type": "string",
            "description": "The incident questionnaire type"
          },
          "lockedResponse": {
            "type": "boolean",
            "description": "If the response is locked ie if the response is completed"
          },
          "incidentDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time of the incident",
            "example": "2021-07-05T10:35:17"
          },
          "reportingStaff": {
            "$ref": "#/components/schemas/NomisStaff"
          },
          "reportedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the incident was reported",
            "example": "2021-07-05T10:35:17"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the incident was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the person who created the incident"
          },
          "lastModifiedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the incident was last updated",
            "example": "2021-07-05T10:35:17"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the person who last updated the incident"
          },
          "followUpDate": {
            "type": "string",
            "description": "The follow up date for the incident",
            "format": "date"
          },
          "staffParties": {
            "type": "array",
            "description": "Staff involved in the incident",
            "items": {
              "$ref": "#/components/schemas/NomisStaffParty"
            }
          },
          "offenderParties": {
            "type": "array",
            "description": "Offenders involved in the incident",
            "items": {
              "$ref": "#/components/schemas/NomisOffenderParty"
            }
          },
          "requirements": {
            "type": "array",
            "description": "Requirements for completing the incident report",
            "items": {
              "$ref": "#/components/schemas/NomisRequirement"
            }
          },
          "questions": {
            "type": "array",
            "description": "Questions asked for the incident",
            "items": {
              "$ref": "#/components/schemas/NomisQuestion"
            }
          },
          "history": {
            "type": "array",
            "description": "Historical questionnaire details for the incident",
            "items": {
              "$ref": "#/components/schemas/NomisHistory"
            }
          }
        },
        "description": "NOMIS Incident Report Details"
      },
      "NomisRequirement": {
        "required": [
          "createDateTime",
          "createdBy",
          "date",
          "prisonId",
          "staff"
        ],
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer",
            "description": "The sequence number providing an order for a list of requirements",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "The update required to the incident report"
          },
          "date": {
            "type": "string",
            "description": "Date the requirement was recorded",
            "format": "date"
          },
          "staff": {
            "$ref": "#/components/schemas/NomisStaff"
          },
          "prisonId": {
            "type": "string",
            "description": "The reporting location of the staff"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the requirement was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the person who created the requirement"
          },
          "lastModifiedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the requirement was last updated",
            "example": "2021-07-05T10:35:17"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the person who last updated the requirement"
          }
        },
        "description": "Requirements for completing the incident report"
      },
      "NomisResponse": {
        "required": [
          "createDateTime",
          "createdBy",
          "recordingStaff",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "questionResponseId": {
            "type": "integer",
            "description": "The id of the questionnaire question answer",
            "format": "int64"
          },
          "sequence": {
            "type": "integer",
            "description": "The sequence number of the response for this incident",
            "format": "int32"
          },
          "answer": {
            "type": "string",
            "description": "The answer text"
          },
          "responseDate": {
            "type": "string",
            "description": "Response date added to the response by recording staff",
            "format": "date"
          },
          "comment": {
            "type": "string",
            "description": "Comment added to the response by recording staff"
          },
          "recordingStaff": {
            "$ref": "#/components/schemas/NomisStaff"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the response was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the person who created the response"
          },
          "lastModifiedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the response was last updated",
            "example": "2021-07-05T10:35:17"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the person who last updated the response"
          }
        },
        "description": "List of Responses to this question"
      },
      "NomisStaff": {
        "required": [
          "firstName",
          "lastName",
          "staffId",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username of first account related to staff"
          },
          "staffId": {
            "type": "integer",
            "description": "NOMIS staff id",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "description": "First name of staff member"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of staff member"
          }
        },
        "description": "Who changed the questionnaire"
      },
      "NomisStaffParty": {
        "required": [
          "createDateTime",
          "createdBy",
          "role",
          "staff"
        ],
        "type": "object",
        "properties": {
          "staff": {
            "$ref": "#/components/schemas/NomisStaff"
          },
          "sequence": {
            "type": "integer",
            "description": "The sequence number providing an order for a list of staff parties",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/NomisCode"
          },
          "comment": {
            "type": "string",
            "description": "General information about the incident"
          },
          "createDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the staff party was created",
            "example": "2021-07-05T10:35:17"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the person who created the staff party"
          },
          "lastModifiedDateTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "The date and time the staff party was last updated",
            "example": "2021-07-05T10:35:17"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the person who last updated the staff party"
          }
        },
        "description": "Staff involved in the incident"
      },
      "NomisStatus": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Status Code"
          },
          "description": {
            "type": "string",
            "description": "Status Description"
          }
        },
        "description": "Status details"
      },
      "NomisSyncRequest": {
        "required": [
          "incidentReport"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident report ID, required for updates and must be omitted for initial migration",
            "format": "uuid",
            "nullable": true,
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "initialMigration": {
            "type": "boolean",
            "description": "Set to true for initial migration, omit or set to false for updates",
            "example": true,
            "default": false,
            "enum": [
              true
            ]
          },
          "incidentReport": {
            "$ref": "#/components/schemas/NomisReport"
          }
        },
        "description": "Incident report created or updated in NOMIS",
        "writeOnly": true
      },
      "NomisSyncCreateRequest": {
        "required": [
          "incidentReport"
        ],
        "type": "object",
        "properties": {
          "initialMigration": {
            "type": "boolean",
            "description": "Set to true for initial migration",
            "example": true,
            "default": false,
            "enum": [
              true,
              false
            ]
          },
          "incidentReport": {
            "$ref": "#/components/schemas/NomisReport"
          }
        },
        "description": "Incident report created in NOMIS",
        "writeOnly": true
      },
      "NomisSyncUpdateRequest": {
        "required": [
          "id",
          "incidentReport"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Incident report ID",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "initialMigration": {
            "type": "boolean",
            "description": "Omit or set to false for updates",
            "default": false,
            "enum": [
              false
            ]
          },
          "incidentReport": {
            "$ref": "#/components/schemas/NomisReport"
          }
        },
        "description": "Incident report updated in NOMIS",
        "writeOnly": true
      },
      "NomisSyncReportId": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The internal ID of this report",
            "format": "uuid"
          }
        },
        "description": "Incident report ID",
        "readOnly": true
      },
      "CreateReportRequest": {
        "required": [
          "description",
          "incidentDateAndTime",
          "location",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Incident report type",
            "enum": [
              "ABSCONDER",
              "ASSAULT",
              "ATTEMPTED_ESCAPE_FROM_CUSTODY",
              "ATTEMPTED_ESCAPE_FROM_ESCORT",
              "BOMB_THREAT",
              "BREACH_OF_SECURITY",
              "DEATH_IN_CUSTODY",
              "DEATH_OTHER",
              "DISORDER",
              "DRONE_SIGHTING",
              "OLD_DRONE_SIGHTING1",
              "ESCAPE_FROM_CUSTODY",
              "ESCAPE_FROM_ESCORT",
              "FINDS",
              "FIRE",
              "FOOD_REFUSAL",
              "FULL_CLOSE_DOWN_SEARCH",
              "KEY_LOCK_INCIDENT",
              "MISCELLANEOUS",
              "RADIO_COMPROMISE",
              "RELEASED_IN_ERROR",
              "SELF_HARM",
              "TEMPORARY_RELEASE_FAILURE",
              "TOOL_LOSS",
              "DAMAGE",
              "OLD_ASSAULT",
              "OLD_ASSAULT1",
              "OLD_ASSAULT2",
              "OLD_ASSAULT3",
              "OLD_BARRICADE",
              "OLD_CONCERTED_INDISCIPLINE",
              "OLD_DISORDER",
              "OLD_DRONE_SIGHTING",
              "OLD_DRUGS",
              "OLD_FINDS",
              "OLD_FINDS1",
              "OLD_FINDS2",
              "OLD_FINDS3",
              "OLD_FINDS4",
              "OLD_FIREARM_ETC",
              "OLD_HOSTAGE",
              "OLD_KEY_LOCK_INCIDENT",
              "OLD_MOBILES",
              "OLD_ROOF_CLIMB",
              "OLD_TEMPORARY_RELEASE_FAILURE",
              "OLD_TEMPORARY_RELEASE_FAILURE1",
              "OLD_TEMPORARY_RELEASE_FAILURE2"
            ]
          },
          "incidentDateAndTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the incident took place",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "example": "MDI"
          },
          "title": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Brief title describing the incident"
          },
          "description": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Longer summary of the incident"
          },
          "createNewEvent": {
            "type": "boolean",
            "description": "Whether to link to a new event",
            "default": false
          },
          "linkedEventReference": {
            "type": "string",
            "description": "Which existing event to link to",
            "nullable": true,
            "default": "null"
          }
        },
        "description": "Payload to create a new draft incident report",
        "writeOnly": true
      },
      "CorrectionRequest": {
        "required": [
          "correctionRequestedAt",
          "correctionRequestedBy",
          "descriptionOfChange",
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Why the correction is needed",
            "enum": [
              "MISTAKE",
              "INCORRECT_INFORMATION",
              "MISSING_INFORMATION",
              "OTHER",
              "NOT_SPECIFIED"
            ]
          },
          "descriptionOfChange": {
            "type": "string",
            "description": "The changes being requested"
          },
          "correctionRequestedBy": {
            "type": "string",
            "description": "Member of staff requesting changed"
          },
          "correctionRequestedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the changes were requested",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Request to make a correction to incident report",
        "readOnly": true
      },
      "Event": {
        "required": [
          "createdAt",
          "description",
          "eventDateAndTime",
          "eventReference",
          "id",
          "location",
          "modifiedAt",
          "modifiedBy",
          "prisonId",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The internal ID of this event",
            "format": "uuid"
          },
          "eventReference": {
            "type": "string",
            "description": "The human-readable identifier of this event"
          },
          "eventDateAndTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the incident took place",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "example": "MDI"
          },
          "title": {
            "type": "string",
            "description": "Brief title describing the event"
          },
          "description": {
            "type": "string",
            "description": "Longer summary of the event"
          },
          "createdAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the event was first created",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the event was last changed",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Username of the person who last changed this event"
          },
          "prisonId": {
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "example": "MDI",
            "deprecated": true
          }
        },
        "description": "Event linking multiple incident reports",
        "readOnly": true
      },
      "HistoricalQuestion": {
        "required": [
          "code",
          "question",
          "responses",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The question code; used as a unique identifier within one report and typically refers to a specific question for an incident type"
          },
          "question": {
            "type": "string",
            "description": "The question text as seen by downstream data consumers"
          },
          "sequence": {
            "type": "integer",
            "description": "Sequence of the questions",
            "format": "int32",
            "deprecated": true
          },
          "responses": {
            "type": "array",
            "description": "The responses to this question",
            "items": {
              "$ref": "#/components/schemas/HistoricalResponse"
            }
          },
          "additionalInformation": {
            "type": "string",
            "description": "Optional additional information",
            "nullable": true
          }
        },
        "description": "Previous question with responses making up a previous version of an incident report",
        "readOnly": true
      },
      "HistoricalResponse": {
        "required": [
          "recordedAt",
          "recordedBy",
          "response",
          "sequence"
        ],
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "The response text as seen by downstream data consumers"
          },
          "sequence": {
            "type": "integer",
            "description": "Sequence of the responses",
            "format": "int32",
            "deprecated": true
          },
          "responseDate": {
            "type": "string",
            "description": "Optional response as a date",
            "format": "date",
            "nullable": true,
            "example": "2024-04-29"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Optional additional information",
            "nullable": true
          },
          "recordedBy": {
            "type": "string",
            "description": "Username of person who responded to the question"
          },
          "recordedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the response was made",
            "example": "2021-07-05T10:35:17"
          }
        },
        "description": "Previous response to a question making up a previous version of an incident report",
        "readOnly": true
      },
      "History": {
        "required": [
          "changedAt",
          "changedBy",
          "questions",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Previous incident report type",
            "enum": [
              "ABSCONDER",
              "ASSAULT",
              "ATTEMPTED_ESCAPE_FROM_CUSTODY",
              "ATTEMPTED_ESCAPE_FROM_ESCORT",
              "BOMB_THREAT",
              "BREACH_OF_SECURITY",
              "DEATH_IN_CUSTODY",
              "DEATH_OTHER",
              "DISORDER",
              "DRONE_SIGHTING",
              "OLD_DRONE_SIGHTING1",
              "ESCAPE_FROM_CUSTODY",
              "ESCAPE_FROM_ESCORT",
              "FINDS",
              "FIRE",
              "FOOD_REFUSAL",
              "FULL_CLOSE_DOWN_SEARCH",
              "KEY_LOCK_INCIDENT",
              "MISCELLANEOUS",
              "RADIO_COMPROMISE",
              "RELEASED_IN_ERROR",
              "SELF_HARM",
              "TEMPORARY_RELEASE_FAILURE",
              "TOOL_LOSS",
              "DAMAGE",
              "OLD_ASSAULT",
              "OLD_ASSAULT1",
              "OLD_ASSAULT2",
              "OLD_ASSAULT3",
              "OLD_BARRICADE",
              "OLD_CONCERTED_INDISCIPLINE",
              "OLD_DISORDER",
              "OLD_DRONE_SIGHTING",
              "OLD_DRUGS",
              "OLD_FINDS",
              "OLD_FINDS1",
              "OLD_FINDS2",
              "OLD_FINDS3",
              "OLD_FINDS4",
              "OLD_FIREARM_ETC",
              "OLD_HOSTAGE",
              "OLD_KEY_LOCK_INCIDENT",
              "OLD_MOBILES",
              "OLD_ROOF_CLIMB",
              "OLD_TEMPORARY_RELEASE_FAILURE",
              "OLD_TEMPORARY_RELEASE_FAILURE1",
              "OLD_TEMPORARY_RELEASE_FAILURE2"
            ]
          },
          "changedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the report type was changed",
            "example": "2021-07-05T10:35:17"
          },
          "changedBy": {
            "type": "string",
            "description": "The member of staff who changed the report type"
          },
          "questions": {
            "type": "array",
            "description": "Previous set of question-response pairs",
            "items": {
              "$ref": "#/components/schemas/HistoricalQuestion"
            }
          },
          "nomisType": {
            "type": "string",
            "description": "Previous NOMIS incident report type code, which may be null for newer incident types",
            "nullable": true,
            "deprecated": true
          }
        },
        "description": "Prior version of an incident report",
        "readOnly": true
      },
      "PrisonerInvolvement": {
        "required": [
          "prisonerNumber",
          "prisonerRole"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prisoner’s NOMIS number"
          },
          "prisonerRole": {
            "type": "string",
            "description": "Their role",
            "enum": [
              "ABSCONDER",
              "ACTIVE_INVOLVEMENT",
              "ASSAILANT",
              "ASSISTED_STAFF",
              "DECEASED",
              "ESCAPE",
              "FIGHTER",
              "HOSTAGE",
              "IMPEDED_STAFF",
              "IN_POSSESSION",
              "INTENDED_RECIPIENT",
              "LICENSE_FAILURE",
              "PERPETRATOR",
              "PRESENT_AT_SCENE",
              "SUSPECTED_ASSAILANT",
              "SUSPECTED_INVOLVED",
              "TEMPORARY_RELEASE_FAILURE",
              "VICTIM"
            ]
          },
          "outcome": {
            "type": "string",
            "description": "Optional outcome of prisoner’s involvement",
            "nullable": true,
            "enum": [
              "ACCT",
              "CHARGED_BY_POLICE",
              "CONVICTED",
              "CORONER_INFORMED",
              "DEATH",
              "FURTHER_CHARGES",
              "LOCAL_INVESTIGATION",
              "NEXT_OF_KIN_INFORMED",
              "PLACED_ON_REPORT",
              "POLICE_INVESTIGATION",
              "REMAND",
              "SEEN_DUTY_GOV",
              "SEEN_HEALTHCARE",
              "SEEN_IMB",
              "SEEN_OUTSIDE_HOSP",
              "TRANSFER",
              "TRIAL"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment on prisoner’s involvement",
            "nullable": true
          }
        },
        "description": "Prisoner involved in an incident",
        "readOnly": true
      },
      "ReportWithDetails": {
        "required": [
          "correctionRequests",
          "createdAt",
          "createdInNomis",
          "description",
          "event",
          "history",
          "historyOfStatuses",
          "id",
          "incidentDateAndTime",
          "lastModifiedInNomis",
          "location",
          "modifiedAt",
          "modifiedBy",
          "prisonId",
          "prisonersInvolved",
          "questions",
          "reportReference",
          "reportedAt",
          "reportedBy",
          "staffInvolved",
          "status",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "reportReference": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ABSCONDER",
              "ASSAULT",
              "ATTEMPTED_ESCAPE_FROM_CUSTODY",
              "ATTEMPTED_ESCAPE_FROM_ESCORT",
              "BOMB_THREAT",
              "BREACH_OF_SECURITY",
              "DEATH_IN_CUSTODY",
              "DEATH_OTHER",
              "DISORDER",
              "DRONE_SIGHTING",
              "OLD_DRONE_SIGHTING1",
              "ESCAPE_FROM_CUSTODY",
              "ESCAPE_FROM_ESCORT",
              "FINDS",
              "FIRE",
              "FOOD_REFUSAL",
              "FULL_CLOSE_DOWN_SEARCH",
              "KEY_LOCK_INCIDENT",
              "MISCELLANEOUS",
              "RADIO_COMPROMISE",
              "RELEASED_IN_ERROR",
              "SELF_HARM",
              "TEMPORARY_RELEASE_FAILURE",
              "TOOL_LOSS",
              "DAMAGE",
              "OLD_ASSAULT",
              "OLD_ASSAULT1",
              "OLD_ASSAULT2",
              "OLD_ASSAULT3",
              "OLD_BARRICADE",
              "OLD_CONCERTED_INDISCIPLINE",
              "OLD_DISORDER",
              "OLD_DRONE_SIGHTING",
              "OLD_DRUGS",
              "OLD_FINDS",
              "OLD_FINDS1",
              "OLD_FINDS2",
              "OLD_FINDS3",
              "OLD_FINDS4",
              "OLD_FIREARM_ETC",
              "OLD_HOSTAGE",
              "OLD_KEY_LOCK_INCIDENT",
              "OLD_MOBILES",
              "OLD_ROOF_CLIMB",
              "OLD_TEMPORARY_RELEASE_FAILURE",
              "OLD_TEMPORARY_RELEASE_FAILURE1",
              "OLD_TEMPORARY_RELEASE_FAILURE2"
            ]
          },
          "incidentDateAndTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "reportedBy": {
            "type": "string"
          },
          "reportedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "AWAITING_ANALYSIS",
              "IN_ANALYSIS",
              "INFORMATION_REQUIRED",
              "INFORMATION_AMENDED",
              "CLOSED",
              "POST_INCIDENT_UPDATE",
              "INCIDENT_UPDATED",
              "DUPLICATE"
            ]
          },
          "assignedTo": {
            "type": "string"
          },
          "createdAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedBy": {
            "type": "string"
          },
          "createdInNomis": {
            "type": "boolean"
          },
          "lastModifiedInNomis": {
            "type": "boolean"
          },
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "questions": {
            "type": "array",
            "description": "The question-response pairs that make up this report",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          },
          "history": {
            "type": "array",
            "description": "Prior versions of this report, created when the report type changes",
            "items": {
              "$ref": "#/components/schemas/History"
            }
          },
          "historyOfStatuses": {
            "type": "array",
            "description": "Previous statuses the incident report transitioned to",
            "items": {
              "$ref": "#/components/schemas/StatusHistory"
            }
          },
          "staffInvolved": {
            "type": "array",
            "description": "Which members of staff were involved?",
            "items": {
              "$ref": "#/components/schemas/StaffInvolvement"
            }
          },
          "prisonersInvolved": {
            "type": "array",
            "description": "Which prisoners were involved?",
            "items": {
              "$ref": "#/components/schemas/PrisonerInvolvement"
            }
          },
          "correctionRequests": {
            "type": "array",
            "description": "The corrections that were requested of this report",
            "items": {
              "$ref": "#/components/schemas/CorrectionRequest"
            }
          },
          "nomisStatus": {
            "type": "string",
            "description": "Previous NOMIS incident report status code, which may be null for statuses that cannot be mapped",
            "nullable": true,
            "deprecated": true
          },
          "nomisType": {
            "type": "string",
            "description": "NOMIS incident report type code, which may be null for newer incident types",
            "nullable": true,
            "deprecated": true
          },
          "prisonId": {
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "example": "MDI",
            "deprecated": true
          }
        },
        "description": "Incident report with all related information",
        "readOnly": true
      },
      "StaffInvolvement": {
        "required": [
          "staffRole",
          "staffUsername"
        ],
        "type": "object",
        "properties": {
          "staffUsername": {
            "type": "string",
            "description": "Username"
          },
          "staffRole": {
            "type": "string",
            "description": "Their role",
            "enum": [
              "ACTIVELY_INVOLVED",
              "AUTHORISING_OFFICER",
              "CR_HEAD",
              "CR_LEFT_ARM",
              "CR_LEGS",
              "CR_RIGHT_ARM",
              "CR_SUPERVISOR",
              "DECEASED",
              "FIRST_ON_SCENE",
              "HEALTHCARE",
              "HOSTAGE",
              "IN_POSSESSION",
              "NEGOTIATOR",
              "PRESENT_AT_SCENE",
              "SUSPECTED_INVOLVEMENT",
              "VICTIM",
              "WITNESS"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment on staff member involvement",
            "nullable": true
          }
        },
        "description": "Member of staff involved in an incident",
        "readOnly": true
      },
      "StatusHistory": {
        "required": [
          "changedAt",
          "changedBy",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Previous status of an incident report",
            "enum": [
              "DRAFT",
              "AWAITING_ANALYSIS",
              "IN_ANALYSIS",
              "INFORMATION_REQUIRED",
              "INFORMATION_AMENDED",
              "CLOSED",
              "POST_INCIDENT_UPDATE",
              "INCIDENT_UPDATED",
              "DUPLICATE"
            ]
          },
          "changedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the report status was changed",
            "example": "2021-07-05T10:35:17"
          },
          "changedBy": {
            "type": "string",
            "description": "The member of staff who changed the report status"
          },
          "nomisStatus": {
            "type": "string",
            "description": "Previous NOMIS incident report status code, which may be null for statuses that cannot be mapped",
            "nullable": true,
            "deprecated": true
          }
        },
        "description": "Previous statuses an incident report transitioned to",
        "readOnly": true
      },
      "AddStaffInvolvement": {
        "required": [
          "staffRole",
          "staffUsername"
        ],
        "type": "object",
        "properties": {
          "staffUsername": {
            "maxLength": 120,
            "minLength": 3,
            "type": "string",
            "description": "Username"
          },
          "staffRole": {
            "type": "string",
            "description": "Their role",
            "enum": [
              "ACTIVELY_INVOLVED",
              "AUTHORISING_OFFICER",
              "CR_HEAD",
              "CR_LEFT_ARM",
              "CR_LEGS",
              "CR_RIGHT_ARM",
              "CR_SUPERVISOR",
              "DECEASED",
              "FIRST_ON_SCENE",
              "HEALTHCARE",
              "HOSTAGE",
              "IN_POSSESSION",
              "NEGOTIATOR",
              "PRESENT_AT_SCENE",
              "SUSPECTED_INVOLVEMENT",
              "VICTIM",
              "WITNESS"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment on staff member involvement",
            "nullable": true,
            "default": "null"
          }
        },
        "description": "Add an involved member of staff to an incident report",
        "writeOnly": true
      },
      "AddPrisonerInvolvement": {
        "required": [
          "prisonerNumber",
          "prisonerRole"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "maxLength": 10,
            "minLength": 7,
            "type": "string",
            "description": "Prisoner’s NOMIS number"
          },
          "prisonerRole": {
            "type": "string",
            "description": "Their role",
            "enum": [
              "ABSCONDER",
              "ACTIVE_INVOLVEMENT",
              "ASSAILANT",
              "ASSISTED_STAFF",
              "DECEASED",
              "ESCAPE",
              "FIGHTER",
              "HOSTAGE",
              "IMPEDED_STAFF",
              "IN_POSSESSION",
              "INTENDED_RECIPIENT",
              "LICENSE_FAILURE",
              "PERPETRATOR",
              "PRESENT_AT_SCENE",
              "SUSPECTED_ASSAILANT",
              "SUSPECTED_INVOLVED",
              "TEMPORARY_RELEASE_FAILURE",
              "VICTIM"
            ]
          },
          "outcome": {
            "type": "string",
            "description": "Optional outcome of prisoner’s involvement",
            "nullable": true,
            "default": "null",
            "enum": [
              "ACCT",
              "CHARGED_BY_POLICE",
              "CONVICTED",
              "CORONER_INFORMED",
              "DEATH",
              "FURTHER_CHARGES",
              "LOCAL_INVESTIGATION",
              "NEXT_OF_KIN_INFORMED",
              "PLACED_ON_REPORT",
              "POLICE_INVESTIGATION",
              "REMAND",
              "SEEN_DUTY_GOV",
              "SEEN_HEALTHCARE",
              "SEEN_IMB",
              "SEEN_OUTSIDE_HOSP",
              "TRANSFER",
              "TRIAL"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment on prisoner’s involvement",
            "nullable": true,
            "default": "null"
          }
        },
        "description": "Add an involved prisoner to an incident report",
        "writeOnly": true
      },
      "AddCorrectionRequest": {
        "required": [
          "descriptionOfChange",
          "reason"
        ],
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Why the correction is needed",
            "enum": [
              "MISTAKE",
              "INCORRECT_INFORMATION",
              "MISSING_INFORMATION",
              "OTHER",
              "NOT_SPECIFIED"
            ]
          },
          "descriptionOfChange": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "The changes being requested"
          }
        },
        "description": "Add a correction request to an incident report",
        "writeOnly": true
      },
      "UpdateStaffInvolvement": {
        "type": "object",
        "properties": {
          "staffUsername": {
            "maxLength": 120,
            "minLength": 3,
            "type": "string",
            "description": "Username",
            "nullable": true,
            "default": "null"
          },
          "staffRole": {
            "type": "string",
            "description": "Their role",
            "nullable": true,
            "default": "null",
            "enum": [
              "ACTIVELY_INVOLVED",
              "AUTHORISING_OFFICER",
              "CR_HEAD",
              "CR_LEFT_ARM",
              "CR_LEGS",
              "CR_RIGHT_ARM",
              "CR_SUPERVISOR",
              "DECEASED",
              "FIRST_ON_SCENE",
              "HEALTHCARE",
              "HOSTAGE",
              "IN_POSSESSION",
              "NEGOTIATOR",
              "PRESENT_AT_SCENE",
              "SUSPECTED_INVOLVEMENT",
              "VICTIM",
              "WITNESS"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment on staff member involvement – omit to preserve existing comment, provide null to clear it",
            "nullable": true
          }
        },
        "description": "Update an involved member of staff in an incident report",
        "writeOnly": true
      },
      "UpdatePrisonerInvolvement": {
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "maxLength": 10,
            "minLength": 7,
            "type": "string",
            "description": "Prisoner’s NOMIS number",
            "nullable": true,
            "default": "null"
          },
          "prisonerRole": {
            "type": "string",
            "description": "Their role",
            "nullable": true,
            "default": "null",
            "enum": [
              "ABSCONDER",
              "ACTIVE_INVOLVEMENT",
              "ASSAILANT",
              "ASSISTED_STAFF",
              "DECEASED",
              "ESCAPE",
              "FIGHTER",
              "HOSTAGE",
              "IMPEDED_STAFF",
              "IN_POSSESSION",
              "INTENDED_RECIPIENT",
              "LICENSE_FAILURE",
              "PERPETRATOR",
              "PRESENT_AT_SCENE",
              "SUSPECTED_ASSAILANT",
              "SUSPECTED_INVOLVED",
              "TEMPORARY_RELEASE_FAILURE",
              "VICTIM"
            ]
          },
          "outcome": {
            "type": "string",
            "description": "Optional outcome of prisoner’s involvement – omit to preserve existing outcome, provide null to clear it",
            "nullable": true,
            "enum": [
              "ACCT",
              "CHARGED_BY_POLICE",
              "CONVICTED",
              "CORONER_INFORMED",
              "DEATH",
              "FURTHER_CHARGES",
              "LOCAL_INVESTIGATION",
              "NEXT_OF_KIN_INFORMED",
              "PLACED_ON_REPORT",
              "POLICE_INVESTIGATION",
              "REMAND",
              "SEEN_DUTY_GOV",
              "SEEN_HEALTHCARE",
              "SEEN_IMB",
              "SEEN_OUTSIDE_HOSP",
              "TRANSFER",
              "TRIAL"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Optional comment on prisoner’s involvement – omit to preserve existing comment, provide null to clear it",
            "nullable": true
          }
        },
        "description": "Update an involved prisoner in an incident report",
        "writeOnly": true
      },
      "UpdateCorrectionRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Why the correction is needed",
            "nullable": true,
            "default": "null",
            "enum": [
              "MISTAKE",
              "INCORRECT_INFORMATION",
              "MISSING_INFORMATION",
              "OTHER",
              "NOT_SPECIFIED"
            ]
          },
          "descriptionOfChange": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "The changes being requested",
            "nullable": true,
            "default": "null"
          }
        },
        "description": "Update a correction request in an incident report",
        "writeOnly": true
      },
      "UpdateReportRequest": {
        "type": "object",
        "properties": {
          "incidentDateAndTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the incident took place",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "nullable": true,
            "example": "MDI",
            "default": "null"
          },
          "title": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string",
            "description": "Brief title describing the incident",
            "nullable": true,
            "default": "null"
          },
          "description": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Longer summary of the incident",
            "nullable": true,
            "default": "null"
          },
          "updateEvent": {
            "type": "boolean",
            "description": "Whether the parent event should also be updated",
            "example": true,
            "default": false
          }
        },
        "description": "Payload to update key properties of an incident report",
        "writeOnly": true
      },
      "ReportBasic": {
        "required": [
          "createdAt",
          "createdInNomis",
          "description",
          "id",
          "incidentDateAndTime",
          "lastModifiedInNomis",
          "location",
          "modifiedAt",
          "modifiedBy",
          "prisonId",
          "reportReference",
          "reportedAt",
          "reportedBy",
          "status",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The internal ID of this report",
            "format": "uuid"
          },
          "reportReference": {
            "type": "string",
            "description": "The human-readable identifier of this report"
          },
          "type": {
            "type": "string",
            "description": "Incident report type",
            "enum": [
              "ABSCONDER",
              "ASSAULT",
              "ATTEMPTED_ESCAPE_FROM_CUSTODY",
              "ATTEMPTED_ESCAPE_FROM_ESCORT",
              "BOMB_THREAT",
              "BREACH_OF_SECURITY",
              "DEATH_IN_CUSTODY",
              "DEATH_OTHER",
              "DISORDER",
              "DRONE_SIGHTING",
              "OLD_DRONE_SIGHTING1",
              "ESCAPE_FROM_CUSTODY",
              "ESCAPE_FROM_ESCORT",
              "FINDS",
              "FIRE",
              "FOOD_REFUSAL",
              "FULL_CLOSE_DOWN_SEARCH",
              "KEY_LOCK_INCIDENT",
              "MISCELLANEOUS",
              "RADIO_COMPROMISE",
              "RELEASED_IN_ERROR",
              "SELF_HARM",
              "TEMPORARY_RELEASE_FAILURE",
              "TOOL_LOSS",
              "DAMAGE",
              "OLD_ASSAULT",
              "OLD_ASSAULT1",
              "OLD_ASSAULT2",
              "OLD_ASSAULT3",
              "OLD_BARRICADE",
              "OLD_CONCERTED_INDISCIPLINE",
              "OLD_DISORDER",
              "OLD_DRONE_SIGHTING",
              "OLD_DRUGS",
              "OLD_FINDS",
              "OLD_FINDS1",
              "OLD_FINDS2",
              "OLD_FINDS3",
              "OLD_FINDS4",
              "OLD_FIREARM_ETC",
              "OLD_HOSTAGE",
              "OLD_KEY_LOCK_INCIDENT",
              "OLD_MOBILES",
              "OLD_ROOF_CLIMB",
              "OLD_TEMPORARY_RELEASE_FAILURE",
              "OLD_TEMPORARY_RELEASE_FAILURE1",
              "OLD_TEMPORARY_RELEASE_FAILURE2"
            ]
          },
          "incidentDateAndTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the incident took place",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "example": "MDI"
          },
          "title": {
            "type": "string",
            "description": "Brief title describing the incident"
          },
          "description": {
            "type": "string",
            "description": "Longer summary of the incident"
          },
          "reportedBy": {
            "type": "string",
            "description": "Username of person who created the incident report"
          },
          "reportedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the incident report was created",
            "example": "2021-07-05T10:35:17"
          },
          "status": {
            "type": "string",
            "description": "The current status of this report",
            "example": "DRAFT",
            "enum": [
              "DRAFT",
              "AWAITING_ANALYSIS",
              "IN_ANALYSIS",
              "INFORMATION_REQUIRED",
              "INFORMATION_AMENDED",
              "CLOSED",
              "POST_INCIDENT_UPDATE",
              "INCIDENT_UPDATED",
              "DUPLICATE"
            ]
          },
          "assignedTo": {
            "type": "string",
            "description": "Optional user who this report is currently assigned to",
            "example": "null"
          },
          "createdAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the report was first created",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "description": "When the report was last changed",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Username of the person who last changed this report"
          },
          "createdInNomis": {
            "type": "boolean"
          },
          "lastModifiedInNomis": {
            "type": "boolean"
          },
          "prisonId": {
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "example": "MDI",
            "deprecated": true
          }
        },
        "description": "Incident report with only key information",
        "readOnly": true
      },
      "ChangeTypeRequest": {
        "required": [
          "newType"
        ],
        "type": "object",
        "properties": {
          "newType": {
            "type": "string",
            "description": "The new type",
            "example": "DAMAGE",
            "enum": [
              "ABSCONDER",
              "ASSAULT",
              "ATTEMPTED_ESCAPE_FROM_CUSTODY",
              "ATTEMPTED_ESCAPE_FROM_ESCORT",
              "BOMB_THREAT",
              "BREACH_OF_SECURITY",
              "DEATH_IN_CUSTODY",
              "DEATH_OTHER",
              "DISORDER",
              "DRONE_SIGHTING",
              "OLD_DRONE_SIGHTING1",
              "ESCAPE_FROM_CUSTODY",
              "ESCAPE_FROM_ESCORT",
              "FINDS",
              "FIRE",
              "FOOD_REFUSAL",
              "FULL_CLOSE_DOWN_SEARCH",
              "KEY_LOCK_INCIDENT",
              "MISCELLANEOUS",
              "RADIO_COMPROMISE",
              "RELEASED_IN_ERROR",
              "SELF_HARM",
              "TEMPORARY_RELEASE_FAILURE",
              "TOOL_LOSS",
              "DAMAGE",
              "OLD_ASSAULT",
              "OLD_ASSAULT1",
              "OLD_ASSAULT2",
              "OLD_ASSAULT3",
              "OLD_BARRICADE",
              "OLD_CONCERTED_INDISCIPLINE",
              "OLD_DISORDER",
              "OLD_DRONE_SIGHTING",
              "OLD_DRUGS",
              "OLD_FINDS",
              "OLD_FINDS1",
              "OLD_FINDS2",
              "OLD_FINDS3",
              "OLD_FINDS4",
              "OLD_FIREARM_ETC",
              "OLD_HOSTAGE",
              "OLD_KEY_LOCK_INCIDENT",
              "OLD_MOBILES",
              "OLD_ROOF_CLIMB",
              "OLD_TEMPORARY_RELEASE_FAILURE",
              "OLD_TEMPORARY_RELEASE_FAILURE1",
              "OLD_TEMPORARY_RELEASE_FAILURE2"
            ]
          }
        },
        "description": "Changes an incident report’s type",
        "writeOnly": true
      },
      "ChangeStatusRequest": {
        "required": [
          "newStatus"
        ],
        "type": "object",
        "properties": {
          "newStatus": {
            "type": "string",
            "description": "The new status",
            "example": "CLOSED",
            "enum": [
              "DRAFT",
              "AWAITING_ANALYSIS",
              "IN_ANALYSIS",
              "INFORMATION_REQUIRED",
              "INFORMATION_AMENDED",
              "CLOSED",
              "POST_INCIDENT_UPDATE",
              "INCIDENT_UPDATED",
              "DUPLICATE"
            ]
          }
        },
        "description": "Changes an incident report’s status",
        "writeOnly": true
      },
      "HmppsSubjectAccessRequestContent": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "description": "The content of the subject access request response"
          }
        }
      },
      "DlqMessage": {
        "required": [
          "body",
          "messageId"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "messageId": {
            "type": "string"
          }
        }
      },
      "GetDlqResult": {
        "required": [
          "messages",
          "messagesFoundCount",
          "messagesReturnedCount"
        ],
        "type": "object",
        "properties": {
          "messagesFoundCount": {
            "type": "integer",
            "format": "int32"
          },
          "messagesReturnedCount": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DlqMessage"
            }
          }
        }
      },
      "SimplePageReportBasic": {
        "required": [
          "content",
          "number",
          "numberOfElements",
          "size",
          "sort",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "Elements in this pages",
            "example": "[…]",
            "items": {
              "$ref": "#/components/schemas/ReportBasic"
            }
          },
          "number": {
            "type": "integer",
            "description": "Page number (0-based)",
            "format": "int32",
            "example": 0
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "example": 20
          },
          "totalElements": {
            "type": "integer",
            "description": "Total number of elements in all pages",
            "format": "int64",
            "example": 55
          },
          "sort": {
            "type": "array",
            "description": "Sort orders",
            "example": [
              "property,ASC"
            ],
            "items": {
              "type": "string",
              "description": "Sort orders",
              "example": "[\"property,ASC\"]"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "description": "Number of elements in this page",
            "format": "int32",
            "example": 20
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages",
            "format": "int32",
            "example": 3
          }
        },
        "description": "Page of results",
        "readOnly": true
      },
      "EventWithBasicReports": {
        "required": [
          "createdAt",
          "description",
          "eventDateAndTime",
          "eventReference",
          "id",
          "location",
          "modifiedAt",
          "modifiedBy",
          "prisonId",
          "reports",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "eventReference": {
            "type": "string"
          },
          "eventDateAndTime": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "location": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedAt": {
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$",
            "type": "string",
            "example": "2021-07-05T10:35:17"
          },
          "modifiedBy": {
            "type": "string"
          },
          "reports": {
            "type": "array",
            "description": "The contained reports with key information only",
            "items": {
              "$ref": "#/components/schemas/ReportBasic"
            }
          },
          "prisonId": {
            "type": "string",
            "description": "The location where incident took place, typically a NOMIS prison ID",
            "example": "MDI",
            "deprecated": true
          }
        },
        "description": "Event linking multiple incident reports (including key report information)",
        "readOnly": true,
        "example": "[…]"
      },
      "SimplePageEventWithBasicReports": {
        "required": [
          "content",
          "number",
          "numberOfElements",
          "size",
          "sort",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "Elements in this pages",
            "example": "[…]",
            "items": {
              "$ref": "#/components/schemas/EventWithBasicReports"
            }
          },
          "number": {
            "type": "integer",
            "description": "Page number (0-based)",
            "format": "int32",
            "example": 0
          },
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "example": 20
          },
          "totalElements": {
            "type": "integer",
            "description": "Total number of elements in all pages",
            "format": "int64",
            "example": 55
          },
          "sort": {
            "type": "array",
            "description": "Sort orders",
            "example": [
              "property,ASC"
            ],
            "items": {
              "type": "string",
              "description": "Sort orders",
              "example": "[\"property,ASC\"]"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "description": "Number of elements in this page",
            "format": "int32",
            "example": 20
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages",
            "format": "int32",
            "example": 3
          }
        },
        "description": "Page of results",
        "readOnly": true
      },
      "TypeConstantDescription": {
        "required": [
          "active",
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Machine-readable identifier of this value",
            "example": "DISORDER"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of this value",
            "example": "Disorder"
          },
          "active": {
            "type": "boolean",
            "description": "Whether this type is currently active and usable in new reports",
            "example": true
          },
          "nomisCode": {
            "type": "string",
            "description": "Machine-readable NOMIS identifier of this value, which may be null for newer incident types",
            "nullable": true,
            "example": "DISORDER1",
            "deprecated": true
          }
        },
        "description": "Report type constant",
        "readOnly": true
      },
      "StatusConstantDescription": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Machine-readable identifier of this value",
            "example": "IN_ANALYSIS"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of this value",
            "example": "In analysis"
          },
          "nomisCode": {
            "type": "string",
            "description": "Machine-readable NOMIS identifier of this value, which may be null for statuses that cannot be mapped",
            "nullable": true,
            "example": "INAN",
            "deprecated": true
          }
        },
        "description": "Report status constant",
        "readOnly": true
      },
      "StaffRoleConstantDescription": {
        "required": [
          "code",
          "description",
          "nomisCodes"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Machine-readable identifier of this value",
            "example": "ACTIVELY_INVOLVED"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of this value",
            "example": "Actively involved"
          },
          "nomisCodes": {
            "type": "array",
            "description": "Machine-readable NOMIS identifiers of this value, which may be empty for newer staff roles",
            "example": "[AI, INV]",
            "deprecated": true,
            "items": {
              "type": "string",
              "description": "Machine-readable NOMIS identifiers of this value, which may be empty for newer staff roles",
              "example": "[AI, INV]",
              "deprecated": true
            }
          }
        },
        "description": "Staff role constant",
        "readOnly": true
      },
      "PrisonerRoleConstantDescription": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Machine-readable identifier of this value",
            "example": "IMPEDED_STAFF"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of this value",
            "example": "Impeded staff"
          },
          "nomisCode": {
            "type": "string",
            "description": "Machine-readable NOMIS identifier of this value, which may be null for newer prisoner roles",
            "nullable": true,
            "example": "IMPED",
            "deprecated": true
          }
        },
        "description": "Prisoner role constant",
        "readOnly": true
      },
      "PrisonerOutcomeConstantDescription": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Machine-readable identifier of this value",
            "example": "POLICE_INVESTIGATION"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of this value",
            "example": "Investigation (Police)"
          },
          "nomisCode": {
            "type": "string",
            "description": "Machine-readable NOMIS identifier of this value, which may be null for newer prisoner outcomes",
            "nullable": true,
            "example": "IPOL",
            "deprecated": true
          }
        },
        "description": "Prisoner outcome constant",
        "readOnly": true
      },
      "ConstantDescription": {
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Machine-readable identifier of this value",
            "example": "VICTIM"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of this value",
            "example": "Victim"
          }
        },
        "description": "Code and description of a constant or enumeration member",
        "readOnly": true
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "hmpps-auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/authorize",
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          }
        }
      }
    }
  }
}
