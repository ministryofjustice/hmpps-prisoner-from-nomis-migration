{
  "openapi": "3.0.1",
  "info": {
    "title": "Alerts API",
    "description": "API for retrieving and managing alerts relating to a person.\n\n## Authentication\n\nThis API uses OAuth2 with JWTs. You will need to pass the JWT in the `Authorization` header using the `Bearer` scheme.\n\n## Authorisation\n\nThe API uses roles to control access to the endpoints. The roles required for each endpoint are documented in the endpoint descriptions.\n\n## Identifying the user\n\nThe majority of the endpoints in this API require the user to be identified via their username. This is to correctly populate the change history of alerts e.g. who created or updated an alert and for auditing purposes. The username is required when the service is called directly by a user or when another service is acting on behalf of a user. The following methods for supplying the username are supported to cater for these scenarios:\n\n1. **Token claim** - The username can be passed in via a `user_name` or `username` claim in the JWT.\n2. **Username header** - The username can be passed in via a `Username` header in the request.\n\nThe username is taken in priority order from the `user_name` or `username` claim in the JWT if present, followed by the `Username` header if no claim is found.\n\n### 4XX response codes related to username:\n\n- A 400 Bad Request response will be returned if the username cannot be found via any of the above methods.\n- A 400 Bad Request response will be returned if the username cannot be found in the user management service.\n- A 403 Forbidden response will also be returned if the user identified by the username does not have access to the caseload associated with the person.",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2024-03-25.879.2a5f14a"
  },
  "servers": [
    {
      "url": "https://alerts-api-dev.hmpps.service.justice.gov.uk",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    }
  ],
  "paths": {
    "/alerts/{alertUuid}": {
      "get": {
        "tags": [
          "alerts-controller"
        ],
        "summary": "Get an alert by its unique identifier",
        "description": "Returns the alert with the matching identifier.\n\nRequires one of the following roles:\n* ROLE_ALERTS_READER\n* ROLE_ALERTS_ADMIN\n* PRISON\n* ROLE_NOMIS_ALERTS",
        "operationId": "retrieveAlert",
        "parameters": [
          {
            "name": "alertUuid",
            "in": "path",
            "description": "Alert unique identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Alert found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The alert associated with this identifier was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "alerts-controller"
        ],
        "summary": "Update an alert",
        "description": "\n\nRequires one of the following roles:\n* ROLE_ALERTS_WRITER\n* ROLE_ALERTS_ADMIN\n* UPDATE_ALERT\n* ROLE_NOMIS_ALERTS",
        "operationId": "updateAlert",
        "parameters": [
          {
            "name": "alertUuid",
            "in": "path",
            "description": "Alert unique identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user interacting with the client service. This can be used instead of the `user_name` or `username` token claim when the client service is acting on behalf of a user. The value passed in the username header will only be used if a `user_name` or `username` token claim is not present.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Source",
            "in": "header",
            "description": "The source of the request. Will default to 'DPS' if not suppliedThis value will be assigned to the additionalInformation.source property in published domain events. A source value of 'NOMIS' will allow any username value that is less than 32 characters to be supplied. If this username is not found, its value will be used for the user display name property. A source value of 'NOMIS' will also allow no username value to be supplied and will use 'NOMIS' for both the username and display name properties.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "DPS",
                    "NOMIS"
                  ]
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlert"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Alert updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "alerts-controller"
        ],
        "summary": "Delete an alert",
        "description": "This endpoint fully removes the alert from the system. It is used when an alert has been created in error or should otherwise be removed from this service. This endpoint will return 200 OK if the alert was not found or already deleted. This is to prevent low value warnings being logged.\n\nRequires one of the following roles:\n* ROLE_ALERTS_WRITER\n* ROLE_ALERTS_ADMIN\n* UPDATE_ALERT\n* ROLE_NOMIS_ALERTS",
        "operationId": "deleteAlert",
        "parameters": [
          {
            "name": "alertUuid",
            "in": "path",
            "description": "Alert unique identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user interacting with the client service. This can be used instead of the `user_name` or `username` token claim when the client service is acting on behalf of a user. The value passed in the username header will only be used if a `user_name` or `username` token claim is not present.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Source",
            "in": "header",
            "description": "The source of the request. Will default to 'DPS' if not suppliedThis value will be assigned to the additionalInformation.source property in published domain events. A source value of 'NOMIS' will allow any username value that is less than 32 characters to be supplied. If this username is not found, its value will be used for the user display name property. A source value of 'NOMIS' will also allow no username value to be supplied and will use 'NOMIS' for both the username and display name properties.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "DPS",
                    "NOMIS"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Alert was not found or already deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Alert deleted"
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/alerts": {
      "post": {
        "tags": [
          "migrate-alerts-controller"
        ],
        "summary": "Migrate an alert from NOMIS",
        "description": "\n\nRequires one of the following roles:\n* ROLE_ALERTS_ADMIN\n* ROLE_NOMIS_ALERTS",
        "operationId": "createAlert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateAlertRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict, the person already has an active alert using the supplied alert code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Alert migrated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts": {
      "post": {
        "tags": [
          "alerts-controller"
        ],
        "summary": "Create an alert",
        "description": "\n\nRequires one of the following roles:\n* ROLE_ALERTS_WRITER\n* ROLE_ALERTS_ADMIN\n* UPDATE_ALERT\n* ROLE_NOMIS_ALERTS",
        "operationId": "createAlert_1",
        "parameters": [
          {
            "name": "Username",
            "in": "header",
            "description": "The username of the user interacting with the client service. This can be used instead of the `user_name` or `username` token claim when the client service is acting on behalf of a user. The value passed in the username header will only be used if a `user_name` or `username` token claim is not present.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Source",
            "in": "header",
            "description": "The source of the request. Will default to 'DPS' if not suppliedThis value will be assigned to the additionalInformation.source property in published domain events. A source value of 'NOMIS' will allow any username value that is less than 32 characters to be supplied. If this username is not found, its value will be used for the user display name property. A source value of 'NOMIS' will also allow no username value to be supplied and will use 'NOMIS' for both the username and display name properties.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "DPS",
                    "NOMIS"
                  ]
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlert"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Alert created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict, the person already has an active alert using the supplied alert code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prisoners/{prisonNumber}/alerts": {
      "get": {
        "tags": [
          "prisoner-alerts-controller"
        ],
        "summary": "Gets all the alerts for a prisoner by their prison number",
        "description": "\n\nRequires one of the following roles:\n* ROLE_ALERTS_READER\n* ROLE_ALERTS_ADMIN\n* PRISON",
        "operationId": "retrievePrisonerAlerts",
        "parameters": [
          {
            "name": "prisonNumber",
            "in": "path",
            "description": "Prison number of the prisoner. Also referred to as the offender number, offender id or NOMS id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "A1234AA"
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Return only active (true) or inactive (false) alerts. If not provided or a null value is supplied, all alerts are returned",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "alertType",
            "in": "query",
            "description": "Filter by alert type code or codes. Supply a comma separated list of alert type codes to filter by more than one code",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "M"
          },
          {
            "name": "alertCode",
            "in": "query",
            "description": "Filter by alert code or codes. Supply a comma separated list of alert codes to filter by more than one code",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "AS"
          },
          {
            "name": "activeFromStart",
            "in": "query",
            "description": "Filter alerts that have an active on date or after the supplied date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2023-09-27"
          },
          {
            "name": "activeFromEnd",
            "in": "query",
            "description": "Filter alerts that have an active on date up to or before the supplied date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2021-11-15"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter alerts that contain the search text in their description, authorised by or comments. The search is case insensitive and will match any part of the description, authorised by or comment text",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Search text"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "activeFrom,DESC"
              ]
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Alerts found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageAlert"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/prisoners/alerts": {
      "get": {
        "tags": [
          "prisoner-alerts-controller"
        ],
        "summary": "Gets all the alerts for prisoners by their prison numbers",
        "description": "Returns all the alerts for the supplied prison numbers. The alerts are returned along with counts.\n\nRequires one of the following roles:\n* ROLE_ALERTS_READER\n* ROLE_ALERTS_ADMIN\n* PRISON",
        "operationId": "retrievePrisonerAlerts_1",
        "parameters": [
          {
            "name": "prisonNumbers",
            "in": "query",
            "description": "The prison numbers of the prisoners",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Alerts found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrisonersAlerts"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/alerts/{alertUuid}/auditEvents": {
      "get": {
        "tags": [
          "alerts-controller"
        ],
        "summary": "Get audit events for an alert",
        "description": "This endpoint retrieves all the audit events for a given alert\n\nRequires one of the following roles:\n* ROLE_ALERTS_READER\n* ROLE_ALERTS_ADMIN\n* PRISON\n* ROLE_NOMIS_ALERTS",
        "operationId": "retrieveAlertAuditEvents",
        "parameters": [
          {
            "name": "alertUuid",
            "in": "path",
            "description": "Alert unique identifier",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Source",
            "in": "header",
            "description": "The source of the request. Will default to 'DPS' if not suppliedThis value will be assigned to the additionalInformation.source property in published domain events. A source value of 'NOMIS' will allow any username value that is less than 32 characters to be supplied. If this username is not found, its value will be used for the user display name property. A source value of 'NOMIS' will also allow no username value to be supplied and will use 'NOMIS' for both the username and display name properties.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "DPS",
                    "NOMIS"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Alert was not found or already deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Audit events retrieved for a given alert",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEvent"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/alert-types": {
      "get": {
        "tags": [
          "alert-types-controller"
        ],
        "summary": "Get all alert types",
        "description": "Returns the full list of alert types and the alert codes within those types. By default this endpoint only returns active alert types and codes. The include inactive parameter can be used to return all alert types and codes.\n\nRequires one of the following roles:\n* ROLE_ALERTS_READER\n* ROLE_ALERTS_ADMIN\n* PRISON",
        "operationId": "getAlertTypes",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "description": "Include inactive alert types and codes. Defaults to false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alert types and codes found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised, requires a valid Oauth2 token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, requires an appropriate role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateAlert": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The updated description of the alert. Will be ignored if null and will clear the description if empty. This is a free text field and can be used to provide additional information about the alert e.g. the reasons for adding it.It is limited to 1000 characters.",
            "example": "Alert description"
          },
          "authorisedBy": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "The updated user, staff member, approving person or organisation that authorised the alert to be added. Will be ignored if null and will clear the authorised by value if empty. This is a free text field and can be used to record the name of the person who authorised the alert. It is limited to 40 characters.",
            "example": "A. Nurse, An Agency"
          },
          "activeFrom": {
            "type": "string",
            "description": "The date the alert should be active from. If set to null the field will be ignoredThe active from date can be in the past or the future, but must be before the active to date",
            "format": "date",
            "example": "2021-09-27"
          },
          "activeTo": {
            "type": "string",
            "description": "The date the alert should be active until. If set to null i.e. cleared, the alert will be active indefinitely. The active to date can be in the past or the future, but must be after the active from date",
            "format": "date",
            "example": "2022-07-15"
          },
          "appendComment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "An additional comment to append to comments thread associated with the alert. Will be ignored if null or empty. It is a free text field limited to 1000 characters.",
            "example": "Additional user comment on the alert comment thread"
          }
        },
        "description": "The alert data to use to update an alert in the service"
      },
      "ErrorResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errorCode": {
            "type": "string"
          },
          "userMessage": {
            "type": "string"
          },
          "developerMessage": {
            "type": "string"
          },
          "moreInfo": {
            "type": "string"
          }
        }
      },
      "Alert": {
        "required": [
          "activeFrom",
          "alertCode",
          "alertUuid",
          "comments",
          "createdAt",
          "createdBy",
          "createdByDisplayName",
          "isActive",
          "prisonNumber"
        ],
        "type": "object",
        "properties": {
          "alertUuid": {
            "type": "string",
            "description": "The unique identifier assigned to the alert",
            "format": "uuid",
            "example": "8cdadcf3-b003-4116-9956-c99bd8df6a00"
          },
          "prisonNumber": {
            "type": "string",
            "description": "The prison number of the person the alert is for. Also referred to as the offender number, offender id or NOMS id.",
            "example": "A1234AA"
          },
          "alertCode": {
            "$ref": "#/components/schemas/AlertCodeSummary"
          },
          "description": {
            "type": "string",
            "description": "The description of the alert. It is a free text field and is used to provide additional information about the alert e.g. the reasons for adding it.It is limited to 1000 characters.",
            "example": "Alert description"
          },
          "authorisedBy": {
            "type": "string",
            "description": "The user, staff member, approving person or organisation that authorised the alert to be added. It is a free text field and is used to record the name of the person who authorised the alert. It is limited to 40 characters.",
            "example": "A. Nurse, An Agency"
          },
          "activeFrom": {
            "type": "string",
            "description": "The date the alert should be active from. If not provided, the alert will be active from the current date. The active from date can be in the past or the future, but must be before the active to date",
            "format": "date",
            "example": "2021-09-27"
          },
          "activeTo": {
            "type": "string",
            "description": "The date the alert should be active until. If not provided, the alert will be active indefinitely. The active to date can be in the past or the future, but must be after the active from date",
            "format": "date",
            "example": "2022-07-15"
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates that the alert is active for the person. Alerts are active if their active from date is in the past and their active to date is either null or in the future. Note that this field is read only and cannot be set directly using the API.",
            "example": true
          },
          "comments": {
            "type": "array",
            "description": "The comments thread associated with the alert. The comments are ordered by the date and time they were created, with the most recent comment first.",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time the alert was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the user who created the alert",
            "example": "USER1234"
          },
          "createdByDisplayName": {
            "type": "string",
            "description": "The displayable name of the user who created the alert",
            "example": "Firstname Lastname"
          },
          "lastModifiedAt": {
            "type": "string",
            "description": "The date and time the alert was last modified",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The username of the user who last modified the alert",
            "example": "USER1234"
          },
          "lastModifiedByDisplayName": {
            "type": "string",
            "description": "The displayable name of the user who last modified the alert",
            "example": "Firstname Lastname"
          }
        },
        "description": "An alert associated with a person"
      },
      "AlertCodeSummary": {
        "required": [
          "alertTypeCode",
          "alertTypeDescription",
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "alertTypeCode": {
            "type": "string",
            "description": "The short code for the alert type",
            "example": "A"
          },
          "alertTypeDescription": {
            "type": "string",
            "description": "The description of the alert type",
            "example": "Alert type description"
          },
          "code": {
            "type": "string",
            "description": "The short code for the alert code. Usually starts with the alert type code",
            "example": "ABC"
          },
          "description": {
            "type": "string",
            "description": "The description of the alert code",
            "example": "Alert code description"
          }
        },
        "description": "The summary information of an alert code used to categorise alerts"
      },
      "Comment": {
        "required": [
          "comment",
          "commentUuid",
          "createdAt",
          "createdBy",
          "createdByDisplayName"
        ],
        "type": "object",
        "properties": {
          "commentUuid": {
            "type": "string",
            "description": "The unique identifier assigned to the comment",
            "format": "uuid",
            "example": "476939e3-7cc1-4c5f-8f54-e7d055d1d50c"
          },
          "comment": {
            "type": "string",
            "description": "The comment text appended to the alert comment thread. It is a free text field limited to 1000 characters.",
            "example": "Additional user comment on the alert comment thread"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time the comment was created and appended to the alert comment thread",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the user who created the comment and appended it to the alert comment thread",
            "example": "USER1234"
          },
          "createdByDisplayName": {
            "type": "string",
            "description": "The displayable name of the user who created the comment and appended it to the alert comment thread",
            "example": "Firstname Lastname"
          }
        },
        "description": "A comment appended to an alert comment thread"
      },
      "MigrateAlertRequest": {
        "required": [
          "activeFrom",
          "alertCode",
          "comments",
          "createdAt",
          "createdBy",
          "createdByDisplayName",
          "prisonNumber"
        ],
        "type": "object",
        "properties": {
          "prisonNumber": {
            "type": "string",
            "description": "The prison number of the person the alert is for. Also referred to as the offender number, offender id or NOMS id.",
            "example": "A1234AA"
          },
          "alertCode": {
            "type": "string",
            "description": "The alert code for the alert. A person can only have one alert using each code active at any one time. The alert code must exist and be active.",
            "example": "ABC"
          },
          "description": {
            "type": "string",
            "description": "The description of the alert. This is a free text field and can be used to provide additional information about the alert e.g. the reasons for adding it.It is limited to 1000 characters.",
            "example": "Alert description"
          },
          "authorisedBy": {
            "type": "string",
            "description": "The user, staff member, approving person or organisation that authorised the alert to be added. This is a free text field and can be used to record the name of the person who authorised the alert. It is limited to 40 characters.",
            "example": "A. Nurse, An Agency"
          },
          "activeFrom": {
            "type": "string",
            "description": "The date the alert should be active from. If not provided, the alert will be active from the current date. The active from date can be in the past or the future, but must be before the active to date",
            "format": "date",
            "example": "2021-09-27"
          },
          "activeTo": {
            "type": "string",
            "description": "The date the alert should be active until. If not provided, the alert will be active indefinitely. The active to date can be in the past or the future, but must be after the active from date",
            "format": "date",
            "example": "2022-07-15"
          },
          "createdAt": {
            "type": "string",
            "description": "The date the alert was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The user ID of the person who created the alert",
            "example": "AB11DZ"
          },
          "createdByDisplayName": {
            "type": "string",
            "description": "The friendly name of the person who created the alert",
            "example": "C Reated"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date the alert was updated",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "description": "The user ID of the person who updated the alert",
            "example": "AB11DZ"
          },
          "updatedByDisplayName": {
            "type": "string",
            "description": "The friendly name of the person who updated the alert",
            "example": "C Reated"
          },
          "comments": {
            "type": "array",
            "description": "The threaded comments that are stored against an alert",
            "items": {
              "$ref": "#/components/schemas/MigrateCommentRequest"
            }
          }
        },
        "description": "The alert data to use to create an alert in the service"
      },
      "MigrateCommentRequest": {
        "required": [
          "comment",
          "createdAt",
          "createdBy",
          "createdByDisplayName"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The text added at the comment",
            "example": "This is a comment"
          },
          "createdAt": {
            "type": "string",
            "description": "The date the alert was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The user ID of the person who created the alert",
            "example": "AB11DZ"
          },
          "createdByDisplayName": {
            "type": "string",
            "description": "The friendly name of the person who created the alert",
            "example": "C Reated"
          }
        },
        "description": "The threaded comments that are stored against an alert"
      },
      "CreateAlert": {
        "required": [
          "alertCode",
          "prisonNumber"
        ],
        "type": "object",
        "properties": {
          "prisonNumber": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "The prison number of the person the alert is for. Also referred to as the offender number, offender id or NOMS id.",
            "example": "A1234AA"
          },
          "alertCode": {
            "type": "string",
            "description": "The alert code for the alert. A person can only have one alert using each code active at any one time. The alert code must exist and be active.",
            "example": "ABC"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The description of the alert. This is a free text field and can be used to provide additional information about the alert e.g. the reasons for adding it.It is limited to 1000 characters.",
            "example": "Alert description"
          },
          "authorisedBy": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "The user, staff member, approving person or organisation that authorised the alert to be added. This is a free text field and can be used to record the name of the person who authorised the alert. It is limited to 40 characters.",
            "example": "A. Nurse, An Agency"
          },
          "activeFrom": {
            "type": "string",
            "description": "The date the alert should be active from. If not provided, the alert will be active from the current date. The active from date can be in the past or the future, but must be before the active to date",
            "format": "date",
            "example": "2021-09-27"
          },
          "activeTo": {
            "type": "string",
            "description": "The date the alert should be active until. If not provided, the alert will be active indefinitely. The active to date can be in the past or the future, but must be after the active from date",
            "format": "date",
            "example": "2022-07-15"
          }
        },
        "description": "The alert data to use to create an alert in the service"
      },
      "PageAlert": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string"
          },
          "nullHandling": {
            "type": "string"
          },
          "ascending": {
            "type": "boolean"
          },
          "property": {
            "type": "string"
          },
          "ignoreCase": {
            "type": "boolean"
          }
        }
      },
      "PrisonersAlerts": {
        "required": [
          "alerts",
          "prisonNumbers"
        ],
        "type": "object",
        "properties": {
          "prisonNumbers": {
            "type": "array",
            "description": "The distinct list of prison numbers for the prisoners with alerts in the collection.",
            "example": [
              "A1234AA",
              "B2345BB"
            ],
            "items": {
              "type": "string",
              "description": "The distinct list of prison numbers for the prisoners with alerts in the collection.",
              "example": "[\"A1234AA\",\"B2345BB\"]"
            }
          },
          "alerts": {
            "type": "array",
            "description": "The list of alerts for the prisoners in the collection.",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          }
        },
        "description": "Collection of alerts for a list of prisoners"
      },
      "AuditEvent": {
        "required": [
          "action",
          "actionedAt",
          "actionedBy",
          "actionedByDisplayName",
          "description"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The audit event type",
            "example": "CREATED",
            "enum": [
              "CREATED",
              "UPDATED",
              "DELETED"
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of what has changed",
            "example": "The active to date was updated from 2012-02-03 to 2012-04-05"
          },
          "actionedAt": {
            "type": "string",
            "description": "When the event happened",
            "format": "date-time"
          },
          "actionedBy": {
            "type": "string",
            "description": "The user id of the person who was audited",
            "example": "AB1234AA"
          },
          "actionedByDisplayName": {
            "type": "string",
            "description": "The friendly name of the person who was audited",
            "example": "An Auditer"
          }
        }
      },
      "AlertCode": {
        "required": [
          "alertTypeCode",
          "code",
          "createdAt",
          "createdBy",
          "description",
          "isActive",
          "listSequence"
        ],
        "type": "object",
        "properties": {
          "alertTypeCode": {
            "type": "string",
            "description": "The short code for the alert type",
            "example": "A"
          },
          "code": {
            "type": "string",
            "description": "The short code for the alert code. Usually starts with the alert type code",
            "example": "ABC"
          },
          "description": {
            "type": "string",
            "description": "The description of the alert code",
            "example": "Alert code description"
          },
          "listSequence": {
            "type": "integer",
            "description": "The sequence number of the alert code within the alert type. Used for ordering alert codes correctly in lists and drop downs. A value of 0 indicates this is the default alert code for the alert type",
            "format": "int32",
            "example": 3
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates that the alert code is active and can be used. Inactive alert codes are not returned by default in the API",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time the alert code was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the user who created the alert code",
            "example": "USER1234"
          },
          "modifiedAt": {
            "type": "string",
            "description": "The date and time the alert code was last modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "The username of the user who last modified the alert code",
            "example": "USER1234"
          },
          "deactivatedAt": {
            "type": "string",
            "description": "The date and time the alert code was deactivated",
            "format": "date-time"
          },
          "deactivatedBy": {
            "type": "string",
            "description": "The username of the user who deactivated the alert code",
            "example": "USER1234"
          }
        },
        "description": "An alert code used to categorise alerts"
      },
      "AlertType": {
        "required": [
          "alertCodes",
          "code",
          "createdAt",
          "createdBy",
          "description",
          "isActive",
          "listSequence"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The short code for the alert type",
            "example": "A"
          },
          "description": {
            "type": "string",
            "description": "The description of the alert type",
            "example": "Alert type description"
          },
          "listSequence": {
            "type": "integer",
            "description": "The sequence number of the alert type. Used for ordering alert types correctly in lists and drop downs. A value of 0 indicates this is the default alert type",
            "format": "int32",
            "example": 3
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates that the alert type is active and can be used. Inactive alert types are not returned by default in the API",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time the alert type was created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of the user who created the alert type",
            "example": "USER1234"
          },
          "modifiedAt": {
            "type": "string",
            "description": "The date and time the alert type was last modified",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "The username of the user who last modified the alert type",
            "example": "USER1234"
          },
          "deactivatedAt": {
            "type": "string",
            "description": "The date and time the alert type was deactivated",
            "format": "date-time"
          },
          "deactivatedBy": {
            "type": "string",
            "description": "The username of the user who deactivated the alert type",
            "example": "USER1234"
          },
          "alertCodes": {
            "type": "array",
            "description": "The alert codes associated with this alert type",
            "items": {
              "$ref": "#/components/schemas/AlertCode"
            }
          }
        },
        "description": "An alert type used to categorise alerts"
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
