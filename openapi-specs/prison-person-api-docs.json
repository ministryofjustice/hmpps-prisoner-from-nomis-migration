{
  "openapi": "3.0.1",
  "info": {
    "title": "Prison Person API",
    "description": "API for access to Prison Person Data (data about a person that is specific to their time in prison)",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "feedback@digital.justice.gov.uk"
    },
    "version": "2024-07-04.306.871d4fc"
  },
  "servers": [
    {
      "url": "/",
      "description": "Current url"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    },
    {
      "hmpps-auth": []
    }
  ],
  "tags": [
    {
      "name": "Sync with NOMIS",
      "description": "Endpoints to keep the Prison Person database in sync with changes in the NOMIS database"
    },
    {
      "name": "Prison Person Data",
      "description": "Data about a person that is specific to their time in prison"
    },
    {
      "name": "Physical Attributes",
      "description": "The height and weight of a prisoner"
    },
    {
      "name": "Migration from NOMIS",
      "description": "Endpoints to facilitate migration of data from NOMIS to the Prison Person database"
    }
  ],
  "paths": {
    "/sync/prisoners/{prisonerNumber}/physical-attributes": {
      "put": {
        "tags": [
          "Physical Attributes",
          "Sync with NOMIS"
        ],
        "summary": "SYNC endpoint to sync changes to physical attributes made in NOMIS",
        "description": "This endpoint <b>SHOULD ONLY BE USED IN ORDER TO SYNC CHANGES MADE IN NOMIS.</b> There is a separate endpoint for normal editing of the Physical Attributes.<br/><br/>Requires role `ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_SYNC__RW`<br/><br/>Edits can be made to physical attributes in NOMIS to both the current booking and to old bookings. This sync API can handle both by accepting the `appliesFrom` and `appliesTo` timestamps.  For edits to the current booking, `appliesFrom` should be equal to the point in time that the edit happened, and `appliesTo` should be null.  For edits to historical bookings `appliesFrom` should be equal to the booking start date and and `appliesTo` should be equal to the booking end date. The `createdAt` date should always be the point in time that the user made the edit.",
        "operationId": "syncPhysicalAttributes",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalAttributesSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns prisoner's physical attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesHistoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_SYNC__RW",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesHistoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/prisoners/{prisonerNumber}/physical-attributes": {
      "put": {
        "tags": [
          "Physical Attributes"
        ],
        "summary": "Updates the physical attributes (height and weight) for a prisoner",
        "description": "Requires role `ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES__RW`",
        "operationId": "setPhysicalAttributes",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalAttributesUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns prisoner's physical attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES__RW",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesDto"
                }
              }
            }
          }
        }
      }
    },
    "/migration/prisoners/{prisonerNumber}/physical-attributes": {
      "put": {
        "tags": [
          "Physical Attributes",
          "Migration from NOMIS"
        ],
        "summary": "MIGRATION endpoint to sync changes to physical attributes made in NOMIS",
        "description": "This endpoint <b>SHOULD ONLY BE USED IN ORDER TO MIGRATE DATA.</b><br/><br/>Requires role `ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_MIGRATION__RW` user made the edit.",
        "operationId": "migratePhysicalAttributes",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalAttributesMigrationRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns prisoner's physical attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PHYSICAL_ATTRIBUTES_MIGRATION__RW",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalAttributesDto"
                }
              }
            }
          }
        }
      }
    },
    "/prisoners/{prisonerNumber}": {
      "get": {
        "tags": [
          "Prison Person Data"
        ],
        "description": "Requires role `ROLE_PRISON_PERSON_API__PRISON_PERSON_DATA__RO`",
        "operationId": "getPrisonPersonData",
        "parameters": [
          {
            "name": "prisonerNumber",
            "in": "path",
            "description": "The prisoner number",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prisoner number",
              "example": "A1234AA"
            },
            "example": "A1234AA"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Prison Person Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrisonPersonDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to access this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing required role. Requires ROLE_PRISON_PERSON_API__PRISON_PERSON_DATA__RO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errorCode": {
            "type": "string"
          },
          "userMessage": {
            "type": "string"
          },
          "developerMessage": {
            "type": "string"
          },
          "moreInfo": {
            "type": "string"
          }
        }
      },
      "PhysicalAttributesSyncRequest": {
        "required": [
          "appliesFrom",
          "createdAt",
          "createdBy"
        ],
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height (in centimetres). May be left null if no data available for height.",
            "format": "int32",
            "nullable": true,
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms). May be left null if no data available for weight.",
            "format": "int32",
            "nullable": true,
            "example": 70
          },
          "appliesFrom": {
            "type": "string",
            "description": "The timestamp indicating from when these physical attributes were true for the prisoner. For edits to the current booking, this should be equal to the 'createdAt' date. For edits to historical bookings, this should be equal to the booking start date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "appliesTo": {
            "type": "string",
            "description": "The timestamp of when these physical attributes should no longer be considered applicable. For edits to the current booking, this should be left null. For edits to historical bookings, this should be equal to the booking end date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdAt": {
            "type": "string",
            "description": "The timestamp indicating when this record was last edited in NOMIS.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of who last edited the record in NOMIS",
            "example": "USER1"
          }
        },
        "description": "Request object for syncing a prisoner's physical attributes"
      },
      "PhysicalAttributesHistoryDto": {
        "required": [
          "appliesFrom",
          "createdAt",
          "createdBy",
          "physicalAttributesHistoryId"
        ],
        "type": "object",
        "properties": {
          "physicalAttributesHistoryId": {
            "type": "integer",
            "description": "Unique identifier for the history entry",
            "format": "int64",
            "example": 123
          },
          "height": {
            "type": "integer",
            "description": "Height (in centimetres)",
            "format": "int32",
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms)",
            "format": "int32",
            "example": 70
          },
          "appliesFrom": {
            "type": "string",
            "description": "The timestamp indicating from when these physical attributes were true for the prisoner",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "appliesTo": {
            "type": "string",
            "description": "The timestamp of when these physical attributes were superseded by another record. If they are currently applicable, this is null.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdAt": {
            "type": "string",
            "description": "The timestamp indicating when this record was created",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of who created the record"
          }
        },
        "description": "Physical Attributes History"
      },
      "PhysicalAttributesUpdateRequest": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height (in centimetres). May be left null if no data available for height.",
            "format": "int32",
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms). May be left null if no data available for weight.",
            "format": "int32",
            "example": 70
          }
        },
        "description": "Request object for updating a prisoner's physical attributes"
      },
      "PhysicalAttributesDto": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height (in centimetres)",
            "format": "int32",
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms)",
            "format": "int32",
            "example": 70
          }
        },
        "description": "Physical Attributes"
      },
      "PhysicalAttributesMigrationRequest": {
        "required": [
          "appliesFrom",
          "createdAt",
          "createdBy"
        ],
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height (in centimetres). May be left null if no data available for height.",
            "format": "int32",
            "nullable": true,
            "example": 180
          },
          "weight": {
            "type": "integer",
            "description": "Weight (in kilograms). May be left null if no data available for weight.",
            "format": "int32",
            "nullable": true,
            "example": 70
          },
          "appliesFrom": {
            "type": "string",
            "description": "The timestamp indicating from when these physical attributes were true for the prisoner. For migration of the current booking, this should be equal to the 'createdAt' date. For migration of historical bookings, this should be equal to the booking start date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "appliesTo": {
            "type": "string",
            "description": "The timestamp of when these physical attributes should no longer be considered applicable. For migration of the current booking, this should be left null. For migration of historical bookings, this should be equal to the booking end date.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdAt": {
            "type": "string",
            "description": "The timestamp indicating when this record was last edited in NOMIS.",
            "format": "yyyy-MM-dd'T'HH:mm:ssX",
            "example": "2024-06-14T10:35:17+01:00[Europe/London]"
          },
          "createdBy": {
            "type": "string",
            "description": "The username of who last edited the record in NOMIS",
            "example": "USER1"
          }
        },
        "description": "Request object for migration of a prisoner's physical attributes"
      },
      "PrisonPersonDto": {
        "required": [
          "physicalAttributes",
          "prisonerNumber"
        ],
        "type": "object",
        "properties": {
          "prisonerNumber": {
            "type": "string",
            "description": "Prisoner Number",
            "example": "A1234AA"
          },
          "physicalAttributes": {
            "$ref": "#/components/schemas/PhysicalAttributesDto"
          }
        },
        "description": "Prison Person"
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "hmpps-auth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/authorize",
            "tokenUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/oauth/token",
            "scopes": {
              "read": "Allows read of data",
              "write": "Allows write of data"
            }
          }
        },
        "openIdConnectUrl": "https://sign-in-dev.hmpps.service.justice.gov.uk/auth/.well-known/openid-configuration"
      }
    }
  }
}
